{
  "timestamp": "2025-07-02_10-30-15",
  "active_window": "ChatGPT",
  "focused_text": "Could not extract AXValue from focused element",
  "clipboard": "pip show google-generativeai | grep Version   # should show 0.3.x or newer",
  "vscode_text": "# excuse_api.py\nimport os, json, time, hashlib\nfrom pathlib import Path\nfrom dotenv import load_dotenv, find_dotenv\nload_dotenv(find_dotenv(), override=True)\n\n\n\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\n\nimport google.generativeai as genai\ngenai.configure(api_key=os.getenv(\"GEMINI_KEY\"))\nmodel = genai.GenerativeModel(\"gemini-pro\")\n# ---------- simple \u201cDB\u201d ----------\nDATA = Path(\"history.json\")\nif not DATA.exists():\n    DATA.write_text(\"[]\")          # seed empty list\n\n\n\n# ---------- FastAPI app ----------\napp = FastAPI()\n\nclass Req(BaseModel):\n    scenario: str  # e.g. \"missed class\"\n    urgency: str   # \"low\" | \"medium\" | \"panic\"\n\nSYSTEM_PROMPT = \"\"\"\nYou are an elite alibi-creator.\nReturn a JSON with:\n  excuse               (\u2264 50 words),\n  believability_score  (0-1),\n  chat_log             (short WhatsApp-style proof)\n\"\"\"\n\n# ---------- /generate ----------\n@app.post(\"/generate\")\ndef generate(r: Req):\n    prompt = f\"Scenario: {r.scenario}\\nUrgency: {r.urgency}\"\n    full_prompt = f\"{SYSTEM_PROMPT}\\n{prompt}\"\n    out = json.loads(model.generate_content(full_prompt).text)\n    entry = {\n        \"id\": hashlib.md5(out[\"excuse\"].encode()).hexdigest(),\n        \"ts\": time.time(),\n        **out,\n    }\n\n    history = json.loads(DATA.read_text())\n    if entry[\"id\"] not in {h[\"id\"] for h in history}:   # de-dupe\n        history.append(entry)\n        DATA.write_text(json.dumps(history, indent=2))\n\n    return entry\n\n# ---------- /top?n=5 ----------\n@app.get(\"/top\")\ndef top(n: int = 5):\n    history = json.loads(DATA.read_text())\n    history.sort(key=lambda x: x[\"believability_score\"], reverse=True)\n    return history[:n]",
  "ocr_text": "6\n\no\nS\n\n\u00a9\n\nWindow\n\nChatGPT File Edit View\n= List of research\nSerena\nEXPLORER\n\n2\n\nP > __pycache__\nv .venv\n> bin\noe > include\n> lib\n\nL&\n\nFe\n\n\u00a9 pyvenv.cfg\n\u00a9 .env\n\n@ excuse_api.py\n{} history.json\nA = requirements.txt\n\n@\n> OUTLINE\na > TIMELINE\n\nGE & maine @0A4\n\n\\Y EXCUSE-GENERATOR\n\n4\n\nU\nU\nU\nU\nU\n\nJ Welcome\n\n\u00ae (.venv) bhuvanarora@Bhuvans\u2014-MacBook-Pro excuse-generator % pip show google-generativeai | grep Version\n\nHelp\n\n& Artificial Intellige CO NLP_1.ipynb - Co CO NLP_1.ipynb - Co ca LAUNCHED Glok M Launched - Artif\n\nO 8 =\n\n\u20ac 5\n\naistudio.google.com/apikey\nP\u00a3 excuse-generator\n\n@ excuse_api.py 4,U X % .env U\n\n@ excuse_api.py > ...\n\n1 # excuse_api.py\n\n2 import os, json, time, hashlib\n3 from pathlib import Path\n4 from dotenv import load_dotenv, find_dotenv\n5 load_dotenv(find_dotenv(), override=True)\n6\n\nPROBLEMS @ OUTPUT DEBUG CONSOLE TERMINAL PORTS.\n\n5.@->google-generativeai) (5.5.2)\n\nRequirement already satisfied: pyasn1-modules>=0.2.1 in\n-@->google-generativeai) (0.4.2)\n\nRequirement already satisfied: rsa<5,>=3.1.4 in\nle-generativeai) (4.9.1)\n\nRequirement already satisfied: charset_normalizer<4,>=2 in\n,>=2.18.0->google-api-core->google-generativeai) (3.4.2)\nRequirement already satisfied: idna<4,>=2.5 in ./.venv/lib/python3.11/site-packages (from requests<3.0.0,>=2.18.0->g\n00gle-api-core->google-generativeai) (3.10)\nRequirement already satisfied: urllib3<3,>=1.21.1 in\n8.0->google-api-core->google-generativeai) (2.5.0) L\nRequirement already satisfied: certifi>=2017.4.17 in ./.venv/lib/python3.11/site-packages (from requests<3.0.0,>=2.1\n8.0->google-api-core->google-generativeai) (2025.6.15)\n\nRequirement already satisfied: pyasn1>=0.1.3 in ./.venv/lib/python3.11/site-packages (from rsa<5,>=3.1.4->google-aut\nh>=2.15.0->google-generativeai) (0.6.1)\n\nRequirement already satisfied: httplib2<1.0.0,>=0.19.@ in\non-client->google-generativeai) (@.22.0)\n\nRequirement already satisfied: google-auth-httplib2<1.0.0,>=0.2.@ in\nle-api-python-client->google-generativeai) (0.2.0)\nRequirement already satisfied: uritemplate<5,>=3.@.1 in\n-client->google-generativeai) (4.2.0)\n\nRequirement already satisfied: pyparsing!=3.0.0, !=3.0.1, !=3.0.2, !=3.0.3,<4,>=2.4.2 in ./.venv/lib/python3.11/site-pa,s\nckages (from httplib2<1.0.0,>=0.19.0->google-api-python-client->google-generativeai) (3.2.3)\n\nRequirement already satisfied: annotated-types>=0.6.@ in ./.venv/lib/python3.11/site-packages (from pydantic->google\n-generativeai) (0.7.0)\n\nRequirement already satisfied: pydantic-core==2.33.2 in\ngenerativeai) (2.33.2)\n\nRequirement already satisfied: typing-inspection>=0.4.@ in\nle-generativeai) (@.4.1)\n\nDownloading google_generativeai-@.8.5-py3-none-any.whl (155 kB)\nInstalling collected packages: google-generativeai\nSuccessfully installed google-generativeai-0.8.5\n\n-/.venv/lib/python3.11/site-packages (from google-auth>=2.158 =\n-/.venv/lib/python3.11/site-packages (from google-auth>=2.15.@->goog\n\n./.venv/lib/python3.11/site-packages (from requests<3.0.0\n1\n\n./.venv/lib/python3.11/site-packages (from requests<3.0.0,>=2.1\n\n./.venv/lib/python3.11/site-packages (from google-api-pyth, ,\ni\n./.venv/lib/python3.11/site-packages (from goog\n\n./.venv/1lib/python3.11/site-packages (from google-api-python\n\n./.venv/1lib/python3.11/site-packages (from pydantic->google- _\n\n./.venv/lib/python3.11/site-packages (from pydantic->goog\n\n# should afi\now @.3.x or newer\n\ngrep:\ngrep:\ngrep:\ngrep:\n\n#: No such file or directory\nshould: No such file or directory\nshow: No such file or directory\n@.3.x: No such file or directory\ngrep: or: No such file or directory\ngrep: newer: No such file or directory\nERROR: Pipe to stdout was broken 1:\nException ignored in: <_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>\n\nBrokenPipeError: [Errno 32] Broken pipe\n\n(.venv) bhuvanarora@Bhuvans\u2014-MacBook-Pro excuse-generator % o 1:\n\nby\n\nLn7,Col1 Spaces:4 UTF-8 LF {} Python\nfile.pdf ITRV (1).pdf ITRV.pdf AIEUTIR EAI EY Iko to mtj Iko to MTJ (1).pdf\n\n.\n\n0\n\nIko to MTJ-\n\n.\n\nArtificial_Intelligence\n\nBOW\n\n&8 3.13.2 64-bit\n\nG@ROTO8\n\no API keys - Open/\n\n2%0) FQ BS\n\n(B\u00ae al-05-BBLena \u00a9 Openal \u00a9 Gemini API refer 96 Get API key | GX\n\nIntelligent Excuse Generator Plan >\nBhuvan\n\neco MO @G\n\nyew\u201d Uo W\n\nlook shoud! i first press ctrl c or continu like this onlyt\n\nThought for a couple of seconds\nYes\u2014press Ctrl +C first to stop the running FastAPI server.\n\nThat gives you a clean prompt in the terminal so you can:\n\n1. Upgrade the Gemini SDK\n\nbash O) Copy\nsource .venv/bin/activate\npip uninstall -y google-generativeai\npip install --no-cache-dir --upgrade google-generativeai\n2. Verify the version\nbash O) Copy\npip show google-generativeai | grep Version\n3. Run the server again\nbash O) Copy\n\nuvicorn excuse_api:app --reload\n\n\u20ac Work with Code Tab x\n\nMessage Bhuvan\n\n+ @\u00ae ov\n\n>=\n\nS@80O\u00bb\u00b0aSG2o O92\n\n|\n2) a =\n:\n\n@ Wed Jul 2 10:30AM"
}
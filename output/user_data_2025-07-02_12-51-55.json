{
  "timestamp": "2025-07-02_12-51-55",
  "active_window": "Electron",
  "focused_text": "Could not extract AXValue from focused element",
  "clipboard": "curl -X POST http://127.0.0.1:8000/generate \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\"scenario\":\"missed flight\",\"urgency\":\"medium\",\"voice\":true}'",
  "vscode_text": "# excuse_api.py\nimport os, json, time, hashlib\nfrom pathlib import Path\nfrom dotenv import load_dotenv, find_dotenv\nload_dotenv(find_dotenv(), override=True)\n\n\n\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\n\n# --- Gemini via LangChain (REST v1) ---\nfrom langchain_google_genai import ChatGoogleGenerativeAI\nfrom langchain.schema import SystemMessage, HumanMessage\n\n# expose key for LangChain wrapper\nos.environ[\"GOOGLE_API_KEY\"] = os.getenv(\"GOOGLE_API_KEY\")  # must be in .env\n\nllm = ChatGoogleGenerativeAI(\n    model=\"gemini-2.5-flash\",          # free\u2011tier model\n    temperature=0.8,\n    convert_system_message_to_human=True\n)\n#print(\">>> model being used:\", model._name) \n# ---------- simple \u201cDB\u201d ----------\nDATA = Path(\"history.json\")\nif not DATA.exists():\n    DATA.write_text(\"[]\")          # seed empty list\n\n\n\n# ---------- FastAPI app ----------\napp = FastAPI()\n\nclass Req(BaseModel):\n    scenario: str  # e.g. \"missed class\"\n    urgency: str   # \"low\" | \"medium\" | \"panic\"\n    mode: str = \"normal\"   # \"normal\" | \"apology\"\n    language: str = \"en\"   # ISO code, e.g. \"en\", \"es\", \"fr\"\n    voice: bool = False   # If true, return an MP3 of the excuse\n\nclass EmergencyRequest(BaseModel):\n    number: str\n    message: str\n\nSYSTEM_PROMPT = \"\"\"\nYou are an elite alibi-creator.\nReturn a JSON with:\n  excuse               (\u2264 50 words),\n  believability_score  (0-1),\n  chat_log             (short WhatsApp-style proof)\n\"\"\"\n\n# ---------- /generate ----------\n@app.post(\"/generate\")\ndef generate(r: Req):\n    style_clause = (\n        \"Respond in a guilt\u2011tripping, heartfelt apology tone.\"\n        if r.mode.lower() == \"apology\"\n        else \"Respond in a neutral, believable tone.\"\n    )\n    # language directive\n    lang_clause = (\n        \"\" if r.language.lower() in [\"en\", \"english\"] else\n        f\"Respond in {r.language} language.\"\n    )\n    full_prompt = (\n        f\"{SYSTEM_PROMPT}\\n\"\n        f\"Tone: {style_clause}\\n\"\n        f\"{lang_clause}\\n\"\n        f\"Scenario: {r.scenario}\\nUrgency: {r.urgency}\"\n    )\n    messages = [\n        SystemMessage(content=SYSTEM_PROMPT),\n        HumanMessage(content=full_prompt)\n    ]\n    response_text = llm(messages).content.strip()\n    # LangChain may wrap JSON in ``` blocks \u2013 strip them\n    if response_text.startswith(\"```\"):\n        response_text = response_text.strip(\"`\").lstrip(\"json\").strip()\n    out = json.loads(response_text)\n    entry = {\n        \"id\": hashlib.md5(out[\"excuse\"].encode()).hexdigest(),\n        \"ts\": time.time(),\n        **out,\n    }\n    # --- optional voice synthesis ---\n    if r.voice:\n        from gtts import gTTS\n        audio_dir = Path(\"audio\")\n        audio_dir.mkdir(exist_ok=True)\n        audio_file = audio_dir / f\"{entry['id']}.mp3\"\n        gTTS(out[\"excuse\"], lang=r.language[:2]).save(audio_file.as_posix())\n        entry[\"audio\"] = str(audio_file)\n\n    history = json.loads(DATA.read_text())\n    if entry[\"id\"] not in {h[\"id\"] for h in history}:   # de-dupe\n        history.append(entry)\n        DATA.write_text(json.dumps(history, indent=2))\n\n    return entry\n\n# ---------- /top?n=5 ----------\n@app.get(\"/top\")\ndef top(n: int = 5):\n    history = json.loads(DATA.read_text())\n    history.sort(key=lambda x: x[\"believability_score\"], reverse=True)\n    return history[:n]\n\n# ---------- /emergency ----------\n@app.post(\"/emergency\")\ndef emergency(req: EmergencyRequest):\n    \"\"\"\n    Simulate sending an emergency SMS/call.\n    For the demo we just log the request and append an entry to history.json.\n    \"\"\"\n    entry = {\n        \"id\": f\"emergency-{int(time.time())}\",\n        \"ts\": time.time(),\n        \"excuse\": \"EMERGENCY TRIGGER\",\n        \"believability_score\": 1.0,\n        \"chat_log\": f\"Sent '{req.message}' to {req.number}\"\n    }\n    history = json.loads(DATA.read_text())\n    history.append(entry)\n    DATA.write_text(json.dumps(history, indent=2))\n    return {\"status\": \"sent\", \"to\": req.number, \"msg\": req.message}",
  "ocr_text": "Code File Edit Selection View Go  Run_ Terminal Window\u2019 Help 3 100%) fF Q Wed Jul 2 12:51PM\n+\n\n\u00a9 9 Get API key |G X\n\n[|\nK 4\n\u00a5\ncc)\n\nw usr os\n\nCore Features Designed:\n\nIntelligent Excuse Generator Plan >\n\n1. Al-Generated Excuses \u2014 Context-based excuse suggestions (work, school, social, family). Bhuvan\n2. Scenario-Based Customization \u2014 Allows users to refine excuses based on urgency and\nexcuse_api.py +9 \u20140\neee@ S PP excuse-generator By Bow a] \u2014apl.py a\neee 38 mode: str = \"normal\"\no EXPLORER vr \u00ae excuse_api.py 6 X {} history.json M @ README.md env U Dy\n39 language: str = \"en\"\n\\ EXCUSE-GENERATOR \u00ae excuse_api.py > \u00a9 generate 9\n5 . 1 40 voice: bool = False\nP \u2014Pycache_ def generate(r: Req): |\nv wvenv x . ~ . 1 41\nry > bin audio_dir = Path(\"audio\") Fs 42 class EmergencyRequest(BaseModel):\nMat audio_dir.mkdir(exist_ok=True) = x 42 lines\n> lib =\n& pyvenv.cfg 92 audio_file = audio_dir / f\"{entry['id']] == 85 *koUt,\n= env u gTTS(out[\"excuse\"], lang=r.language[:2]) = 86 }\nCh @ i. 6 . . .\n5 Netoniconu entry[\"audio\"] = str(audio_file) 7\nistory.json . .\n88 . :\nJX @ README.md Ls if r.voice\n= requirements.txt history = json. loads(DATA. read_text()) 89 from gtts import gTTS\n+ + + + . . 98 rt i = \" Wel\nif entry[\"id\"] not in {h[\"id\"] for h in hist audio_dir Path(\"audio\")\n. 91 . oP . . =\nhistory.append(entry) EUG) es UREA SLs True)\na-- Ben : Boo a 92 audio_file = audio_dir / f\"{entry['id']}.mp3\"\nPROBLEMS @ OUTPUT DEBUG CONSOLE TERMINAL PORTS re om \u00ae 93 gTTS(out[\"excuse\"], lang=r.language[:2]).save(audio_file.as_posix())\nWotan 1 \u201c 1 ' i . : .\neS aya my way! Just left, praying she's okay. So sorry I can't be th E | >.) python3.11 94 entry[\"audio\"] = str(audio_file)\nsos \u00bb | GJcurl\n@ (.venv) bhuvanarora@Bhuvans\u2014-MacBook-Pro excuse-generator % curl -X POST http: F; 95 . .\n//127.0.0.1:8000/generate \\ . 96 history = json.loads(DATA.read_text())\n-H \"Content-Type: application/json\" \\ in\n-d '{\"scenario\":\"perdi el autobis\",\"urgency\":\"medium\",\" language\":\"es\"}' :\noe Voice output added! Now you can request an MP3:\n{\"id\" :\"3c06e83e2933c79380a36489cb483bce\", \"ts\": 1751439526. 407582, \"excuse\": \"Mi\nperro se puso mal de repente y tuve que llevarlo al veterinario de urgencia.\nAcabamos de volver, pero perdi el autobis por eso.\",\"believability_score\":0.9\n,'\"chat_log\":\"Yo: Uf, el pobre Firulais se puso mal. Tuve que salir corriendo bash a) Copy\nal vete.\\nAmigo: Joder, \u00e9esta bien?\\nYo: Si, ya lo revisaron, solo un susto,\npero me hizo perder el bus.\"}2 H\n1 curl -X POST http://127.0.0.1:8000/generate \\\n' -H \"Content-Type: application/json\" \\\n@ (.venv) bhuvanarora@Bhuvans\u2014-MacBook-Pro excuse-generator % curl -X POST http: in Typ . & pp . J . .\n//127.0..1:8000/generate \\ h -d '{\"scenario\":\"missed flight\", \"urgency\":\"medium\", \"voice\":true}'\n-H \"Content-Type: application/json\" \\\n-d '{\"scenario\":\"en retard\",\"urgency\":\"low\",\"mode\":\"humorous\",\" language\" =\nEr'y! h ang\n{\"id\"\":\"c2924ad30940ad24cada5823d3a9eaec\", \"ts\" :1751439855. 9286458, \"excuse\": \"D\u00e9 Response JSON will include:\nsol\u00e9 pour le retard. Il y a eu un incident technique impr\u00e9vu sur ma ligne de rf\ntransport en commun habituelle, ce qui a engendr\u00e9 de gros retards et m\u2018a forc\n\u00e9 a prendre un d\u00e9tour significatif.\",\"believability_score\":0.9,\"chat_log\":\"Am \u00bb A\nie: 'Pur\u00e9e, la ligne X est bloqu\u00e9e ce matin ! Quelle gal\u00e9re.'\\nMoi: \u2018Je suis Json Vv (a) Copy\ndessus, c'est l'enfer. Je vais \u00e9tre super en retard a cause de ca...'\"}2 1:\nA\nQ) (.venv) bhuvanarora@Bhuvans-MacBook-Pro excuse-generator % curl -X POST http: }\n//127.0.0.1:8000/generate \\ \u00a9 excuse_api.py x\n> OUTLINE -H \"Content-Type: application/json\" \\ t\n$03 -d '{\"scenario\":\"missed flight\",\"urgency\":\"medium\",\"voice\":true}'\nZaUIMELINE | Message Bhuvan\nLx % main* O @o0A6 \u00a9 Not Committed Yet QQ  Ln92,Col36 Spaces:4 UTF-8 LF {} Python @ 3.13.264-bit Q\n\n\u00ae ms caren ane +@% \u00a2 @\n\nS0\u00b068820 B9008 ~AFf\n\n_\u2014 | EB\n\nPrevious 30 Days\n\nB= \u2014 1 = | EB\n\niy"
}
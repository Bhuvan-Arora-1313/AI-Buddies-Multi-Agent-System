{
  "timestamp": "2025-07-02_10-29-48",
  "active_window": "ChatGPT",
  "focused_text": "source .venv/bin/activate        # make sure venv is active\npip uninstall -y google-generativeai\npip install --no-cache-dir --upgrade google-generativeai",
  "clipboard": "source .venv/bin/activate        # make sure venv is active\npip uninstall -y google-generativeai\npip install --no-cache-dir --upgrade google-generativeai",
  "vscode_text": "# excuse_api.py\nimport os, json, time, hashlib\nfrom pathlib import Path\nfrom dotenv import load_dotenv, find_dotenv\nload_dotenv(find_dotenv(), override=True)\n\n\n\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\n\nimport google.generativeai as genai\ngenai.configure(api_key=os.getenv(\"GEMINI_KEY\"))\nmodel = genai.GenerativeModel(\"gemini-pro\")\n# ---------- simple \u201cDB\u201d ----------\nDATA = Path(\"history.json\")\nif not DATA.exists():\n    DATA.write_text(\"[]\")          # seed empty list\n\n\n\n# ---------- FastAPI app ----------\napp = FastAPI()\n\nclass Req(BaseModel):\n    scenario: str  # e.g. \"missed class\"\n    urgency: str   # \"low\" | \"medium\" | \"panic\"\n\nSYSTEM_PROMPT = \"\"\"\nYou are an elite alibi-creator.\nReturn a JSON with:\n  excuse               (\u2264 50 words),\n  believability_score  (0-1),\n  chat_log             (short WhatsApp-style proof)\n\"\"\"\n\n# ---------- /generate ----------\n@app.post(\"/generate\")\ndef generate(r: Req):\n    prompt = f\"Scenario: {r.scenario}\\nUrgency: {r.urgency}\"\n    full_prompt = f\"{SYSTEM_PROMPT}\\n{prompt}\"\n    out = json.loads(model.generate_content(full_prompt).text)\n    entry = {\n        \"id\": hashlib.md5(out[\"excuse\"].encode()).hexdigest(),\n        \"ts\": time.time(),\n        **out,\n    }\n\n    history = json.loads(DATA.read_text())\n    if entry[\"id\"] not in {h[\"id\"] for h in history}:   # de-dupe\n        history.append(entry)\n        DATA.write_text(json.dumps(history, indent=2))\n\n    return entry\n\n# ---------- /top?n=5 ----------\n@app.get(\"/top\")\ndef top(n: int = 5):\n    history = json.loads(DATA.read_text())\n    history.sort(key=lambda x: x[\"believability_score\"], reverse=True)\n    return history[:n]",
  "ocr_text": "Ow \u00ae 0\n\nWindow\n\nChatGPT File Edit View\n= List of research\nSC > G #\u00e9A\nEXPLORER\n\n2\n\nP > __pycache__\nv .venv\n> bin\noe > include\n> lib\n\n<\n\nre\n\n\u00a9 pyvenv.cfg\n\u00a9 .env\n\n@ excuse_api.py\n\n{} history.json\nA = requirements.txt\n\n@\na > TIMELINE\n\nGE & maine @0A4\n\n> OUTLINE\n\n\\Y EXCUSE-GENERATOR\n\n4\n\nU\nU\nU\nU\nU\n\nJ Welcome\n\nHelp\n\n* Artificial Intellige CO NLP_1.ipynb - Cc CO NLP_1.ipynb - Cc ca LAUNCHED Glok M Launched - Artif Artificial_Intelligence\n\nO 8 =\n\nS P excuse-generator\n\naistudio.google.com/apikey\n\nBOO\nby % O\n\n@ excuse_api.py 4,U X % .env U\n\n@ excuse_api.py > ...\n\n1 # excuse_api.py\n\nimport os, json, time, hashlib\n\nfrom pathlib import Path\n\nfrom dotenv import load_dotenv, find_dotenv\nload_dotenv(find_dotenv(), override=True)\n\nok WN\n\n6\n\nPROBLEMS @ OUTPUT DEBUG CONSOLE TERMINAL PORTS.\n\nout = json. loads(model.generate_content(full_prompt) .text)\n\nos\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/google/generativeai/generative_models\n-py\", line 331, in generate_content\nresponse = self._client.generate_content(\n\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/google/ai/generat ive language_vibeta/s ,\nervices/generative_service/client.py\", line 835, in generate_content\nresponse = rpc(\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/google/api_core/gapic_v1/method. py\",\nline 131, in __call__\nreturn wrapped_func(xargs, **kwargs)\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/google/api_core/retry/retry_unary.py\"\n, line 294, in retry_wrapped_func\nreturn retry_target( i\nFile \u201c/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/google/api_core/retry/retry_unary.py\"!\n, line 156, in retry_target\nnext_sleep = _retry_error_helper(\nFile \"/Users/bhuvanarora/excuse-generator/.venv/1ib/python3.11/site-packages/google/api_core/retry/retry_base. py\",\nline 214, in _retry_error_helper 1\nraise final_exc from source_exc\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/google/api_core/retry/retry_unary.py\"\n, line 147, in retry_target\nresult = target()\nAAAAAAAA t\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/google/api_core/timeout.py\", line 130\n, in func_with_timeout\nreturn func(*args, +kkwargs)\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/google/api_core/grpc_helpers.py\", lin\ne 78, in error_remapped_callable\nraise exceptions. from_grpc_error(exc) from exc\ngoogle.api_core.exceptions.NotFound: 404 models/gemini-pro is not found for API version vibeta, or is not supported\nfor generateContent. Call ListModels to see the list of available models and their supported methods\n\nACINFO: Shutting down\n\nINFO: Waiting for application shutdown.\nINFO: Application shutdown complete.\nINFO: Finished server process [96319]\nINFO: Stopping reloader process [96317]\n\n(.venv) bhuvanarora@Bhuvans\u2014-MacBook-Pro excuse-generator % o\n{} Python @ 3.13.264-bit CS\n\nIko to MTJ (1).pdf\n\nQ Ln7,Col1 Spaces:4 UTF-8 LF\n\nfile.pdf\n\nITRV (1).pdf ITRV.pdf Iko to MTJ-s-\n\nIko to mtj\n\nS80\u00b0eE68E20 OD\n\nJETIR2101184\n\n2%0) FQ BS\n\n\u00bb)\n\n6 &FBoe0ose @ Wed Jul 2 10:29AM\n\nMaccy\n\nsource .venv/bin/activate # make sure\nvenv is active@pip uninstall -y google-\ngenerativeai<pip install --no-cache-dir --\nupgrade google-generativeai\n\nIntelligent Excuse Generator Plan >\nBhuvan\n\neco MO @G\n\nwow\n\nlook shoud i first press ctrl c or continu like this onlyt\n\nuo wv\n\nThought for a couple of seconds\n\nYes\u2014press Ctrl +C first to stop the running FastAPI server.\n\nThat gives you a clean prompt in the terminal so you can:\n\n1. Upgrade the Gemini SDK\nbash Y Copied\n\nsource .venv/bin/activate\npip uninstall -y google-generativeai\npip install --no-cache-dir --upgrade google-generativeai\n\n2. Verify the version\n\nbash O) Copy\n\npip show google-generativeai | grep Version\n\n3. Run the server again\n\nbash O) Copy\n\nuvicorn excuse_api:app --reload v\n\n( Work with Code Tab x\n\nsource .venv/bin/activate # make sure venv is active\npip uninstall -y google-generativeai\n\npip install --no-cache-dir --upgrade google-generativeai\n\n+ @\u00ae\n\nr\ne \u00a9) | <\n\nen\n\nWw\n\n\u00a9\n>)"
}
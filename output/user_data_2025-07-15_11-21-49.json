{
  "timestamp": "2025-07-15_11-21-49",
  "active_window": "Finder",
  "focused_text": "Could not extract AXValue from focused element",
  "clipboard": "https://youtu.be/5Xbhu-osvr8?si=D7TL4kaoiNs2BA_y",
  "vscode_text": "# excuse_api.py\nimport os, json, time, hashlib\nfrom pathlib import Path\nfrom dotenv import load_dotenv, find_dotenv\nload_dotenv(find_dotenv(), override=True)\n\n\n\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\n\n# --- Gemini via LangChain (REST v1) ---\nfrom langchain_google_genai import ChatGoogleGenerativeAI\nfrom langchain.schema import SystemMessage, HumanMessage\n\n# expose key for LangChain wrapper\nos.environ[\"GOOGLE_API_KEY\"] = os.getenv(\"GOOGLE_API_KEY\")  # must be in .env\n\nllm = ChatGoogleGenerativeAI(\n    model=\"gemini-2.5-flash\",          # free\u2011tier model\n    temperature=0.8,\n    convert_system_message_to_human=True\n)\n#print(\">>> model being used:\", model._name) \n# ---------- simple \u201cDB\u201d ----------\nDATA = Path(\"history.json\")\nif not DATA.exists():\n    DATA.write_text(\"[]\")          # seed empty list\n\n\n\n# ---------- FastAPI app ----------\napp = FastAPI()\n\nclass Req(BaseModel):\n    scenario: str  # e.g. \"missed class\"\n    urgency: str   # \"low\" | \"medium\" | \"panic\"\n    mode: str = \"normal\"   # \"normal\" | \"apology\"\n    language: str = \"en\"   # ISO code, e.g. \"en\", \"es\", \"fr\"\n    voice: bool = False   # If true, return an MP3 of the excuse\n\nclass EmergencyRequest(BaseModel):\n    number: str\n    message: str\n\nSYSTEM_PROMPT = \"\"\"\nYou are an elite alibi-creator.\nReturn a JSON with:\n  excuse               (\u2264 50 words),\n  believability_score  (0-1),\n  chat_log             (short WhatsApp-style proof)\n\"\"\"\n\n# ---------- /generate ----------\n@app.post(\"/generate\")\ndef generate(r: Req):\n    style_clause = (\n        \"Respond in a guilt\u2011tripping, heartfelt apology tone.\"\n        if r.mode.lower() == \"apology\"\n        else \"Respond in a neutral, believable tone.\"\n    )\n    # language directive\n    lang_clause = (\n        \"\" if r.language.lower() in [\"en\", \"english\"] else\n        f\"Respond in {r.language} language.\"\n    )\n    full_prompt = (\n        f\"{SYSTEM_PROMPT}\\n\"\n        f\"Tone: {style_clause}\\n\"\n        f\"{lang_clause}\\n\"\n        f\"Scenario: {r.scenario}\\nUrgency: {r.urgency}\"\n    )\n    messages = [\n        SystemMessage(content=SYSTEM_PROMPT),\n        HumanMessage(content=full_prompt)\n    ]\n    response_text = llm(messages).content.strip()\n    # LangChain may wrap JSON in ``` blocks \u2013 strip them\n    if response_text.startswith(\"```\"):\n        response_text = response_text.strip(\"`\").lstrip(\"json\").strip()\n    out = json.loads(response_text)\n    entry = {\n        \"id\": hashlib.md5(out[\"excuse\"].encode()).hexdigest(),\n        \"ts\": time.time(),\n        **out,\n    }\n    # --- optional voice synthesis ---\n    if r.voice:\n        from gtts import gTTS\n        audio_dir = Path(\"audio\")\n        audio_dir.mkdir(exist_ok=True)\n        audio_file = audio_dir / f\"{entry['id']}.mp3\"\n        gTTS(out[\"excuse\"], lang=r.language[:2]).save(audio_file.as_posix())\n        entry[\"audio\"] = str(audio_file)\n\n    history = json.loads(DATA.read_text())\n    if entry[\"id\"] not in {h[\"id\"] for h in history}:   # de-dupe\n        history.append(entry)\n        DATA.write_text(json.dumps(history, indent=2))\n\n    return entry\n\n# ---------- /top?n=5 ----------\n@app.get(\"/top\")\ndef top(n: int = 5):\n    history = json.loads(DATA.read_text())\n    history.sort(key=lambda x: x[\"believability_score\"], reverse=True)\n    return history[:n]\n\n# ---------- /emergency ----------\n@app.post(\"/emergency\")\ndef emergency(req: EmergencyRequest):\n    \"\"\"\n    Simulate sending an emergency SMS/call.\n    For the demo we just log the request and append an entry to history.json.\n    \"\"\"\n    entry = {\n        \"id\": f\"emergency-{int(time.time())}\",\n        \"ts\": time.time(),\n        \"excuse\": \"EMERGENCY TRIGGER\",\n        \"believability_score\": 1.0,\n        \"chat_log\": f\"Sent '{req.message}' to {req.number}\"\n    }\n    history = json.loads(DATA.read_text())\n    history.append(entry)\n    DATA.write_text(json.dumps(history, indent=2))\n    return {\"status\": \"sent\", \"to\": req.number, \"msg\": req.message}",
  "ocr_text": "@ Finder File Edit View Go Window Help a 6 O&O DOS \u00a9 exam F Q S \u00a9 Tue Jul 15 11:21AM\nmain v Current File v Fed | : 42 QA se\nBuddy Bubble _. .. . . . . . . 2\n@ activity_analyzer.py @\u00ae activity_analyzer_grog.py @ floating_bubble_ui_grog.py @ shared_state.py @ floating_bubble_ui.py @ buddy_magic.py @ personal_assistant.py Vi: yay\n| Resume) eI 8/ import json A2As\u00a5anv \u00a9\nssistant.py import time\n94, @ swe_buddy.py import os J\n\n@ swe_buddy_groq.py\n\nfrom typing import Dict, Any, List\n\n\u00b0o vy Doutput import subprocess\noo :\n{} live_output.json from grog import Grog\neee oo = goo\nCO < Documents \u2014 Local BB = i 358 \u00a9v Q\nBack/Forward View Group Action Search\nI I I\nnea | Ee [3 E a\n\u00a9 Recents\nA Applica MuP bhuvan photo Bhuwan_Arora_Fi Bhuwan_Arora_Fi BITSian_Speech_ eps speeche My Learning_ Bhuvan_2023A7P  flipkart pyq.pdf Student Allotment\n\u201c PP _ nal_CV nal_CV.docx How_to...tress.pdf NVIDIA.pdf S0246P.pdf Letter PS1.pdf\n{5 Docum... G\noe | - -\n1\n\u00a9 Images How_to_Not_Cop Recipient TA Ship Screenshot Academic History\n\u00a9 Downlo Images e_with_...ech.docx Informat..ARORA application 2025-0...56.08 PM\nI\n(@} bhuvan...\n. User Guide\n> iCloud... Book pef\nx | 9 Shared\nce {) Bhuvan\u2019...\nRun\nGe\ngS \"data_sources\": \u201cActive Window, Focused Text, Screen OCR\",\n\"timestamp\": 1752558689 .797154\n\u00ae \u2014 }\n7 |= Deleted: output/user_data_2025-07-15_11-21-26.json\nes) = \u00a9 Deleted: output/user_data_2025-07-15_11-21-10.json\n\u00a9 iri) |= Deleted: output/user_data_2025-07-15_10-20-03.json\nTit |= Deleted: output/user_data_2025-07-15_10-18-27.json\n29 |= Deleted: output/user_data_2025-07-15_10-19-16.json\n\u00a9 Deleted: outout/user data 2025-07-15 10-19-39.ison\nOBuddy > #@ activity_analyzer_groq.py 151:41 LF UTF-8 4spaces Python 3.13 (Buddy) cf\n\n\u2018 HeO' @ =\nS8008GE20 GBO00R80 =\n\nal\n\n\u2014\n\na... mr mh"
}
{
  "timestamp": "2025-07-02_10-28-07",
  "active_window": "Electron",
  "focused_text": "Could not extract AXValue from focused element",
  "clipboard": "uvicorn excuse_api:app --reload",
  "vscode_text": "# excuse_api.py\nimport os, json, time, hashlib\nfrom pathlib import Path\nfrom dotenv import load_dotenv, find_dotenv\nload_dotenv(find_dotenv(), override=True)\n\n\n\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\n\nimport google.generativeai as genai\ngenai.configure(api_key=os.getenv(\"GEMINI_KEY\"))\nmodel = genai.GenerativeModel(\"gemini-pro\")\n# ---------- simple \u201cDB\u201d ----------\nDATA = Path(\"history.json\")\nif not DATA.exists():\n    DATA.write_text(\"[]\")          # seed empty list\n\n\n\n# ---------- FastAPI app ----------\napp = FastAPI()\n\nclass Req(BaseModel):\n    scenario: str  # e.g. \"missed class\"\n    urgency: str   # \"low\" | \"medium\" | \"panic\"\n\nSYSTEM_PROMPT = \"\"\"\nYou are an elite alibi-creator.\nReturn a JSON with:\n  excuse               (\u2264 50 words),\n  believability_score  (0-1),\n  chat_log             (short WhatsApp-style proof)\n\"\"\"\n\n# ---------- /generate ----------\n@app.post(\"/generate\")\ndef generate(r: Req):\n    prompt = f\"Scenario: {r.scenario}\\nUrgency: {r.urgency}\"\n    full_prompt = f\"{SYSTEM_PROMPT}\\n{prompt}\"\n    out = json.loads(model.generate_content(full_prompt).text)\n    entry = {\n        \"id\": hashlib.md5(out[\"excuse\"].encode()).hexdigest(),\n        \"ts\": time.time(),\n        **out,\n    }\n\n    history = json.loads(DATA.read_text())\n    if entry[\"id\"] not in {h[\"id\"] for h in history}:   # de-dupe\n        history.append(entry)\n        DATA.write_text(json.dumps(history, indent=2))\n\n    return entry\n\n# ---------- /top?n=5 ----------\n@app.get(\"/top\")\ndef top(n: int = 5):\n    history = json.loads(DATA.read_text())\n    history.sort(key=lambda x: x[\"believability_score\"], reverse=True)\n    return history[:n]",
  "ocr_text": "@ Code File Edit Selection View Go Run Terminal Window Help 6 \u20ac8 \u00a9GD O S 2) F Q S \u00a9 Wed Jul2 10:28AM\n\n= List of research @ Artificial Intellige CO NLP_1.ipynb - Co CO NLP_1.ipynb - Co ca LAUNCHED Glob M Launched - Artif Artificial_Intelligence [| Al-05-BBLEN4 \u00a9 Openal coy API keys - Open/ [G) Gemini API refers +\u201d Get API key | G X\nO<\u00abvr cea O 8 & aistudio.google.com/apikey Intelligent Excuse Generator Plan > \u2014\nBhuvan\n6 eee \u00e9>5 D excuse-generator By Boa SS\ngy | oO EXPLORER oe J Welcome \u00ae excuse_api.py 4,U X % .env U Py vee python fa) Copy .\nVv EXCUSE-GENERATOR @ excuse_api.py > ...\n> h 1 # excuse _apl. : 9\n\u00a9 yo) 7 nl e\u2014 ; - pt Py ; . from dotenv import load_dotenv, find_dotenv\na 2 import os, json, time, hashlib load_dotenv(find_dotenv(), override=True)\ney include 3 from pathlib import Path\n; 5 : import google.generativeai as genai\nL& 2. : u = Ere (lesen import load_dotenv, Pete Sa genai.configure(api_key=os.getenv(\"GEMINI_KEY\") )\n. pyvenv.cfg . 5  load_dotenv(find_dotenv(), override=True) model = genai.GenerativeModel(\"gemini-pro\")\n.env\nBS @ excuse_api.py 4,U A)\n{} history,json uU 7 (Make sure you import only once and configure only once.)\nA = requirements.txt U 8\n9 from fastapi import FastAPI Now test\n10 from pydantic import BaseModel\n11 bash O) Copy\n12 import google.generativeai as genai\n13 genai.configure(api_key=os.getenv(\"GEMINI_KEY\") ) Ctr1_c\n14 model = genai.GenerativeModel(\"gemini-pro\")\n5) F ===Saeeee simple \u201cDB\u201d ---------\u2014 : . joad\nF 0 uvicorn excuse_apl:a \u2014-reloa\n16 DATA = Path(\"history.json\") \u2014apEsape\n17 if not DATA.exists(): P\n; 0) . In a second terminal tab:\n18 DATA.write_text(\"[]\") # seed empty list\nPROBLEMS @ OUTPUT DEBUGCONSOLE TERMINAL PORTS. tye A xX bash oO Copy\n-d ease erin sss class\",\"urgency\":\"panic\"}' . >.) python3.11\nInternal Server Errorg\n\u00a9 bhuvanarora@Bhuvans\u2014-MacBook-Pro excuse-generator % curl -X POST http://127.0.0.1:8000/generate \\ bj zsh @ curl -X POST http://127.0.0.1:8000/generate \\\n-H \"Content-Type: application/json\" \\ I -H \"Content-Type: application/json\" \\\n-d '{\"scenario' :missed class\", \u201curgency\":\"panic\"} -d '{\" 0 ound dcl \u2014 Dou ic\"}!\nInternal Server Errorg scenario\":\"missed class\", \"urgency\": \"panic\n@ bhuvanarora@Bhuvans\u2014MacBook-Pro excuse-generator % curl -X POST http://127.0.0.1:8000/generate \\\n-H \u201cContent-Type: application/json\" \\ I\neel seep ian see SURES AUIS OTB You should see JSON with excuse, believability_score, and chat_log.\n@ bhuvanarora@Bhuvans\u2014MacBook-Pro excuse-generator % curl -X POST http://127.0.0.1:8000/generate \\ |\n-H \"Content-Type: application/json\" \\\n-d '{\"scenario\":\"missed class\", \"\u201curgency\":\"panic\"}'\n()) Internal Server Errorg If that works:\n@ bhuvanarora@Bhuvans\u2014MacBook-Pro excuse-generator % curl -X POST http://127.0.0.1:8000/generate \\ I |\n-H \"Content-Type: application/json\" \\ Vv\n-d '{\"scenario\":\"missed class\", \"\u201curgency\":\"panic\"}'\n$03 > OUTLINE Internal Server Errorg bash oO Copy\n> TIMELINE bhuvanarora@Bhuvans\u2014MacBook-Pro excuse-generator % []\nw&y % main* \u00ae@ @oA4 Q Ln7,Col1 Spaces:4 UTF-8 LF {} Python @ 3.13.264-bit\n\u2014 = : , Message Bhuvan\n+ @& \u00a2 @\noy file.pdf ITRV (1).pdf ITRV.pdf JETIR2101184 Iko to mtj Iko to MTJ (1).pdf = Iko to MTJ-s. a ee\n\nS80\u00b0G8880 eee 7a ae"
}
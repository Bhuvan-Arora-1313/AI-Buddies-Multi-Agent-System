{
  "timestamp": "2025-07-02_12-57-31",
  "active_window": "firefox",
  "focused_text": "Could not extract AXValue from focused element",
  "clipboard": "git add README.md\ngit commit -m \"docs: update README with language & voice options\"\ngit push",
  "vscode_text": "# Intelligent Excuse Generator\n\nFastAPI service that produces believable excuses, stores history, ranks by score,  \nand simulates an emergency SMS\u2014powered by Google Gemini (via LangChain).  \nSupports multiple tones, languages, and optional voice output (MP3).\n\n---\n\n## 1 \u00b7 Setup\n    git clone https://github.com/Bhuvan-Arora-1313/excuse-generator.git\n    cd excuse-generator\n    python -m venv .venv && source .venv/bin/activate      # Windows: .venv\\Scripts\\activate\n    pip install -r requirements.txt\n\nCreate a `.env` file:\n\n    GOOGLE_API_KEY=AI-XXXXXXXXXXXXXXXXXXXXXXXX\n\n---\n\n## 2 \u00b7 Run\n    uvicorn excuse_api:app --reload\nSwagger UI \u2192 http://localhost:8000/docs\n\n---\n\n## 3 \u00b7 Endpoints\n\n| Method | Path         | Body / Query                                                                                                               | Description                              |\n|--------|--------------|----------------------------------------------------------------------------------------------------------------------------|------------------------------------------|\n| POST   | `/generate`  | `scenario` (str, required)<br>`urgency` (\"low\" \\| \"medium\" \\| \"panic\")<br>`mode` (\"normal\" \\| \"apology\")<br>`language` (ISO code, default `\"en\"`)<br>`voice` (bool, default `false`) | Generate excuse JSON (+ optional MP3 if `voice=true`) |\n| GET    | `/top?n=5`   | `n` (query param)                                                                                                          | Top *n* excuses by score                 |\n| POST   | `/emergency` | `{\"number\":\"+1123456789\",\"message\":\"Call me!\"}`                                                                            | Simulate emergency SMS (logs entry)     |\n\n---\n\n## 4 \u00b7 Example\n    curl -X POST http://127.0.0.1:8000/generate \\\n         -H \"Content-Type: application/json\" \\\n         -d '{\n               \"scenario\": \"missed class\",\n               \"urgency\": \"panic\",\n               \"mode\": \"apology\",\n               \"language\": \"es\",\n               \"voice\": true\n             }'",
  "ocr_text": "oe \u00a9 oO D\n\nM inbox (2,562) - 20230246@pil: X\n\n<\n\nC a\n\n\u00ae) Coffee & Calm - YouTube x () Bhuvan-Arora-1313/excuse-gen X +\n\u00a9 8 = github.com/Bhuvan-Arora-1313/excuse-generator\n(1 README\n2-Run\nuvicorn excuse_api:app \u2014-reload\nSwagger UI > hitp://localhost:8000/docs\n3 - Endpoints\nMethod Path Body / Query\nscenario (str, required)\nurgency (\"low\" | \"medium\" | \"panic\")\nPOST /generate mode (\"normal\" | \"apology\")\nlanguage (ISO code, default \"en\"\nvoice (bool, default false )\nGET /top?n=5 n (query param)\nPOST / {\"number\":\"+1123456789\",\"message\":\"Call\nemergency me !\"}\n4 -Example\n\ncurl -X POST http://127.0.0.1:8000/generate \\\n-H \"Content-Type: application/json\" \\\n\n-d '{\n\"scenario\": \"missed class\",\n\"urgency\": \"panic\",\n\"mode\": \"apology\",\n\"Language\": \"es\",\n\"voice\": true\n}'\n\nDescription\n\nGenerate excuse JSON (+\noptional MP3 if voice=true )\n\nTop n excuses by score\n\nSimulate emergency SMS\n(logs entry)\n\nBw\n\nAnaconda for package management.\n\nSLSA Generic Configure\ngenerator\n\nGenerate SLSA3 provenance for your\nexisting release workflows\n\n2) Pylint Configure\n\nLint a Python application with pylint.\n\nMore workflows\n\nDismiss suggestions\n\nAl\n\n\u00ab\n\nEx ]"
}
{
  "timestamp": "2025-07-02_09-25-36",
  "active_window": "ChatGPT",
  "focused_text": "Could not extract AXValue from focused element",
  "clipboard": "A UAV Patrol System Using Panoramic Stitching and Object Detection\n",
  "vscode_text": "<!DOCTYPE html>\n<html>\n  <body style=\"margin: 0; background: rgba(0,0,0,0.7); color: white; font-family: sans-serif;\">\n    <div style=\"-webkit-app-region: drag; padding: 10px; background: rgba(0,0,0,0.8);\">\n      <pre id=\"output\" style=\"white-space: pre-wrap; word-wrap: break-word;\">Waiting for data...</pre>\n    </div>\n    <script>\n      const { ipcRenderer } = require('electron');\n      ipcRenderer.on('update-prediction', (event, data) => {\n        document.getElementById('output').textContent = data;\n      });\n    </script>\n  </body>\n</html>",
  "ocr_text": "@ ChatcptT\n\nFile Edit View\n\nVv 1\n\nWindow\n\nof 2\n\nG@ROTO8\n\n39%8) >\n\nx co x ca x M x Artificial_Intelligence_Capstone_ X @\n\n@ Wed Jul 2 9:25AM\n\nx\n\nO OD file:///Users/bhuvanarora/D:\n\neco MO GG\n\nIntelligent Excuse Generator Plan >\nBhuvan\n\nPLU Paiiaanw ampuLre rau\n\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\nfrom openai import OpenAI\n\nDATA = Path(\"history.json\")\n\nDATA.write_text(\"[]\") if not DATA.exists() else None\nclient = OpenAI(api_key=os.getenv(\"OPENAI_API_KEY\") )\napp = FastAPI()\n\nclass Req(BaseModel) :\nscenario: str\nurgency: str\n\nSYS = \"\"\"You are an elite alibi creator. Output a JSON with:\nexcuse, believability_score(@-1), chat_log (WhatsApp-style).\nKeep it under 5@ words.\"\"\"\n\n@app.post(\"/generate\")\ndef gen(r: Req):\nprompt = f\"\"\"Generate an excuse. \\nScenario:{r.scenario}\\nUrgency:{r.urgency}\"\"\"\nres = client.chat.completions.create(\nmodel=\"gpt-\u20144o-mini\",\nmessages=[{\"role\": \"system\", \"content\":SYS},\n{\"role\": \"user\", \"content\":prompt}]\ntemperature=0.8)\nout = res.choices[@].message.content\nentry = {\"id\": hashlib.md5(out.encode()).hexdigest(),\n\"ts\": time.time(), **json.loads(out)}\n\nhist = json.loads(DATA.read_text() )\n\nif entry[\"id\"] not in f{h[\"id\"] for h in hist}:\nhist.append(entry)\nDATA.write_text(json.dumps(hist, indent=2) )\n\nreturn entry\n\nRun:\n\nbash\n\nuvicorn excuse_api:app \u2014-reload\n\nMessage Bhuvan\n\n+ @\u00ae wv\n\nS80\u00b0eEGE20 OOF B\u00ae\n\n\u00a9) Copy\n\n\u00a9) Copy\n\n=]\n\noO)\n\n4\n\n\u00bb"
}
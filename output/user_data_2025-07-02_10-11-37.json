{
  "timestamp": "2025-07-02_10-11-37",
  "active_window": "ChatGPT",
  "focused_text": "why dont we usae gemini then d",
  "clipboard": "curl -X POST http://127.0.0.1:8000/generate \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\"scenario\":\"missed class\", \"urgency\":\"panic\"}'",
  "vscode_text": "# excuse_api.py\nimport os, json, time, hashlib\nfrom pathlib import Path\nfrom dotenv import load_dotenv\nload_dotenv()          # \u2190 NEW: pulls OPENAI_API_KEY from .env\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\nfrom openai import OpenAI\n# ---------- OpenAI client ----------\nclient = OpenAI(api_key=os.getenv(\"OPENAI_API_KEY\"))\n\n# ---------- simple \u201cDB\u201d ----------\nDATA = Path(\"history.json\")\nif not DATA.exists():\n    DATA.write_text(\"[]\")          # seed empty list\n\n\n\n# ---------- FastAPI app ----------\napp = FastAPI()\n\nclass Req(BaseModel):\n    scenario: str  # e.g. \"missed class\"\n    urgency: str   # \"low\" | \"medium\" | \"panic\"\n\nSYSTEM_PROMPT = \"\"\"\nYou are an elite alibi-creator.\nReturn a JSON with:\n  excuse               (\u2264 50 words),\n  believability_score  (0-1),\n  chat_log             (short WhatsApp-style proof)\n\"\"\"\n\n# ---------- /generate ----------\n@app.post(\"/generate\")\ndef generate(r: Req):\n    prompt = f\"Scenario: {r.scenario}\\nUrgency: {r.urgency}\"\n    res = client.chat.completions.create(\n        model=\"gpt-4o-mini\",\n        messages=[\n            {\"role\": \"system\", \"content\": SYSTEM_PROMPT},\n            {\"role\": \"user\",   \"content\": prompt},\n        ],\n        temperature=0.8,\n    )\n    out = json.loads(res.choices[0].message.content)\n\n    entry = {\n        \"id\": hashlib.md5(out[\"excuse\"].encode()).hexdigest(),\n        \"ts\": time.time(),\n        **out,\n    }\n\n    history = json.loads(DATA.read_text())\n    if entry[\"id\"] not in {h[\"id\"] for h in history}:   # de-dupe\n        history.append(entry)\n        DATA.write_text(json.dumps(history, indent=2))\n\n    return entry\n\n# ---------- /top?n=5 ----------\n@app.get(\"/top\")\ndef top(n: int = 5):\n    history = json.loads(DATA.read_text())\n    history.sort(key=lambda x: x[\"believability_score\"], reverse=True)\n    return history[:n]",
  "ocr_text": "Ow \u00ae 0\n\nChatGPT File Edit View\na\neC > G @\n\n| oO EXPLORER\n\n\\Y EXCUSE-GENERATOR\n\n> __pycache__\nv venv\n\n> bin\n\n> include\n\n> lib\n\n\u00a9 pyvenv.cfg\n\u00a9 .env\n\niB 7 @& O\n\n@ excuse_api.py\n\n{} history.json\n\nDead\n\n= requirements.txt\n\n@\n$03 > OUTLINE\n\n> TIMELINE\n\nWE & maine @0A4\n\n4\n\nWindow _ Help . 2%8) FF Q SB Wed Jul 2 10:11AM\n+\n\nU\nU\nU\nU\nU\n\nx [& x Oo x Oo x x M x x a) x @ aApPlikeys - Openal Ai X\n\nO 8 = platform.openai.com/settings/organization/api-keys eee OG Intelligent Excuse Generator Plan >\n\nBhuvan\n< PP excuse-generator By BOWO\u00a3 git pusn \u2014uU OLagin main\nJ Welcome \u00ae excuse_api.py 4,U X %.env U Py %& O -\n. ; Your repo is live and your demo works.\n@ excuse_api-py > ...\n# excuse_api.py = Need help wiring Gemini / Hugging Face, or want a quick code snippet? Just let me know.\nimport os, json, time, hashlib \"ae am 69\n\nfrom pathlib import Path\n\nfrom dotenv import load_dotenv\n\nload_dotenv() # - NEW: pulls OPENAI_API_KEY from .env\nfrom fastapi import FastAPI\n\nfrom pydantic import BaseModel\n\nfrom openai import OpenAI\n\nThought for 10 seconds >\n\nHere's how it works in 2025:\n\ntell me one thing open ai dosnt offer a free api key option\n\nCorrect\u2014today there's no such thing as a \u201cpermanently free, no-card OpenAl API key.\u201d\n\n# ---------- OpenAI client ----------\n1@ client = OpenAI(api_key=os.getenv(\"OPENAI_API_KEY\") ) What people remember What's true now (June 2025)\n\u201cOpenAl gives every new account $18 / $5 in That promo ended for most regions in 2023-\nPROBLEMS @ OUTPUT DEBUG CONSOLE TERMINAL PORTS. + vrs AX\nfree credits.\u201d 24. New sign-ups see \u201cNo credit grants\nsync f >.) python3.11\nreturn await get_async_backend().run_sync_in_worker_thread( >] zsh found.\u201d You must add a payment method and\nAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA, .\nFile \"/Users/bhuvanarora/excuse-generator/.venv/1lib/python3.11/site-packages/anyio/_backends/_asyncio.py\", line 24 pre-pay (top-up) before the API will answer.\n70, in run_sync_in_worker_thread\nreturn await future\nFile \"/Users/bhuvanarora/excuse-generator/.venv/1ib/python3.11/site-packages/anyio/_backends/_asyncio.py\", line 96 \u201cThere\u2019s a free-tier key hidden somewhere.\u201d There isn\u2019t. Any key you create works only if\n7, in run\nresult = context.run(func, *args) . the organization it belongs to has positive\nFile \"/Users/bhuvanarora/excuse-generator/excuse_api.py\", line 38, in generate balance or an active promotional credit.\nres = client.chat.completions.create(\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/openai/_utils/_utils.py\", line 287, i . . . . . woe .\nn wrapper \u201c| heard OpenAl still gives tokens until April Different program. If an existing paid\nreturn func(*args, **kwargs) 1 . . .\nAWWA 2025.\u201d organization opts-in to share its API request\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/openai/resources/chat/completions/com a\npletions.py\", line 1087, in create data for model training, OpenAl returns a few\nreturn self._post(\nAAAAADAAAN bonus \u201cfree tokens\u201d that offset some usage.\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/openai/_base_client.py\", line 1249, i\nn post L That offer runs through 30 April 2025 and is\n\nreturn cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls) )\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARAAAA 1 F\nH not a stand-alone free tier.\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/openai/_base_client.py\", line 1037, i\nn request v\nraise self._make_status_error_from_response(err.response) from None\nopenai.RateLimitError: Error code: 429 - {'error': {'message': \u2018You exceeded your current quota, please check your p\nlan and billing details. For more information on this error, read the docs: https://platform. openai.com/docs/guides/\nerror-codes/api-errors.', \u2018type': \u2018insufficient_quota', 'param': None, \u2018code': \u2018insufficient_quota'\naD 0 ee al oD ' al i \u20ac Work with Code Tab x\nQ  n10,Col53 Spaces:4 UTF-8 LF {} Python & 3.13.264-bit ()\n\nwhy dont we usae gemini then do|\n+ @\u00ae ov\n\nS800eEGE80 \u00a98210 &*\n\n\u00a9\n\nSour\n\ncomm\n\ncomm\n\ncomm\n\ncomm"
}
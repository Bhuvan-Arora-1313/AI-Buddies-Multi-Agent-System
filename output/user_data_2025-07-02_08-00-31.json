{
  "timestamp": "2025-07-02_08-00-31",
  "active_window": "firefox",
  "focused_text": "Could not extract AXValue from focused element",
  "clipboard": "I actively participate in competitive programming and online learning platforms to strengthen my problem-solving skills. While I haven\u2019t secured notable ranks yet, I am consistently improving through regular practice on platforms like LeetCode and HackerRank, and I remain committed to achieving strong results in upcoming contests and certifications.",
  "vscode_text": "<!DOCTYPE html>\n<html>\n  <body style=\"margin: 0; background: rgba(0,0,0,0.7); color: white; font-family: sans-serif;\">\n    <div style=\"-webkit-app-region: drag; padding: 10px; background: rgba(0,0,0,0.8);\">\n      <pre id=\"output\" style=\"white-space: pre-wrap; word-wrap: break-word;\">Waiting for data...</pre>\n    </div>\n    <script>\n      const { ipcRenderer } = require('electron');\n      ipcRenderer.on('update-prediction', (event, data) => {\n        document.getElementById('output').textContent = data;\n      });\n    </script>\n  </body>\n</html>",
  "ocr_text": "@ Firefox Edit View History Bookmarks Tools Window\n\nHelp G a\n\n* Smart border patrol using dror X +\n\noO 08\n\n52% @\n\nee = List of research papers - Google X A UAV patrol system using pano X A UAV patrol system using pano X Smart border patrol using drone X\n\n@ 98\n\nsciencedirectassets.com Wd\n\n\u2014 + 180% v\n\n: ime\n- = Highlight colour ,\nYv Smart border patrol using\n@\u00a9@eee0\n\ndrones and wireless\ncharging system under\n\nbudget limitation Thickness\n\n1 Introduction\n\n2 Problem description\nand formulation\n\n2.1 Phase |: scanning\npattern\ndetermination\n\n2.2 Phase Il:\noptimization model\nformulation\n\n3 Solution approach\n\n4 Numerical\nexperiments\n\n4.1 Case study\n\n4.2 Numerical\nresults\n\nVv 4.3 Sensitivity\nanalysis\n\n4.3.1 Number of\nwaypoints and\nmodel\nperformance\n\n4.3.2 Multiple\nobjectives\n\n4.4 Cost analysis\n5 Conclusion\n\nDeclaration of\nCompeting Interest\n\nAppendix A E-line\nsystem on border line\n\nAppendix B Proof of\nProposition 1\n\nAppendix C E-Line\nLength and E-Line\nPassing Speed\n\nReferences\n\nN. Ahmadian et al.\n\nlimitation of a drone proves to be one of the main obstacles to a\ncontinuous flight time. In most cases, the battery duration of a small-size\ndrone does not exceed 30 min. To address this problem, we propose to\nuse the E-line system (Kim & Lim, 2018), which can charge drones\nwirelessly. The E-line system with an appropriate length will charge the\ndrones during their surveillance, enable a continuous and seamless flight\nover the border, and eliminate the need for battery charging depots. This\nwork provides an optimization model to determine the optimal number\nof drones, the optimal length of the E-line, and the optimal location of\nthe E-line system required for border surveillance. The optimization\nmodel will minimize the total length of the E-line system as well as the\ntotal number of drones for the operation. To enhance the awareness of\nthe system and the security of the border, providing frequent flights to\nevery location on the border is essential. Locations having a higher\nchance of being penetrated by intruders should hold a higher priority\nand should be monitored more frequently. This is handled in our pro-\nposed optimization model by introducing the concept of revisiting gap,\nwhich is defined as the time interval between two consecutive visits to a\nparticular point of the border. We assume that every location|on the\nborder is assigned its priority level, which helps determine the frequency\nof visits to the location. Hence, a permitted revisiting gap can be inter-\npreted as the time interval a drone can be away from a particular\nlocation during the surveillance operation, and it is given to the opti-\nmization model as an input parameter.\n\nBorders form continuous lines and may not have physical waypoints\nor breakpoints at every location. Hence, we assume equally-spaced\nwaypoints distributed over the borderline for the convenience of\n\nComputers & Industrial E:\nShow all\n\nscanning patterns for all drones alone is a combinatorial optimization\nproblem, which is often difficult to solve. Therefore, we propose a two-\nphase sequential optimization approach. The first phase focuses on\nfinding the optimal scanning pattern of each drone, and the second\nphase is to determine the remaining variables for the given scanning\npatterns.\n\n2.1. Phase I: scanning pattern determination\n\nSince the borderline is divided into multiple border segments and a\ndrone is assigned to each segment, each drone\u2019s flight range is limited to\nbetween the two endpoints (E; and E2) of its segment (see Fig. 1).\nConsider waypoint i located between E, and Ep. Let 4; denote the dis-\ntance between waypoint i and E;, and y; be the distance between way-\npoint i and E2. Each segment consists of several waypoints, and each of\nthe waypoints may be associated with a different priority in terms of the\nrisk level for penetration. There can be numerous scanning patterns for\ndrone surveillance for the segment, especially, when there are multiple\nwaypoints and the priority level (i.e., risk) of each waypoint differs from\neach other. We define a scanning pattern of a drone as a routine sequence\nof drone flights that leaves a starting point, scans the segment, and\nreturns back to the starting point to complete one flight cycle, which will\nbe repeated by the drone during the assigned surveillance operation\nperiod. Some example scanning patterns include\nPi :=<1i-E, -i\u2014E2 \u2014E, -i>,p2 := < Ep -i\u2014E, \u2014i\u2014E, \u2014i\u2014-E, >, and\nPp3 := <i\u2014E,\u2014i\u2014E, \u2014i>. Patterns p; and p2 can be appealing if the\n\n*EBE2O \u00a984 GE"
}
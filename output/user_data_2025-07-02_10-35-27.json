{
  "timestamp": "2025-07-02_10-35-27",
  "active_window": "ChatGPT",
  "focused_text": "Could not extract AXValue from focused element",
  "clipboard": "pip show google-generativeai | grep Version",
  "vscode_text": "# excuse_api.py\nimport os, json, time, hashlib\nfrom pathlib import Path\nfrom dotenv import load_dotenv, find_dotenv\nload_dotenv(find_dotenv(), override=True)\n\n\n\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\n\nimport google.generativeai as genai\ngenai.configure(api_key=os.getenv(\"GEMINI_KEY\"))\nmodel = genai.GenerativeModel(\"gemini-pro\")\n# ---------- simple \u201cDB\u201d ----------\nDATA = Path(\"history.json\")\nif not DATA.exists():\n    DATA.write_text(\"[]\")          # seed empty list\n\n\n\n# ---------- FastAPI app ----------\napp = FastAPI()\n\nclass Req(BaseModel):\n    scenario: str  # e.g. \"missed class\"\n    urgency: str   # \"low\" | \"medium\" | \"panic\"\n\nSYSTEM_PROMPT = \"\"\"\nYou are an elite alibi-creator.\nReturn a JSON with:\n  excuse               (\u2264 50 words),\n  believability_score  (0-1),\n  chat_log             (short WhatsApp-style proof)\n\"\"\"\n\n# ---------- /generate ----------\n@app.post(\"/generate\")\ndef generate(r: Req):\n    prompt = f\"Scenario: {r.scenario}\\nUrgency: {r.urgency}\"\n    full_prompt = f\"{SYSTEM_PROMPT}\\n{prompt}\"\n    out = json.loads(model.generate_content(full_prompt).text)\n    entry = {\n        \"id\": hashlib.md5(out[\"excuse\"].encode()).hexdigest(),\n        \"ts\": time.time(),\n        **out,\n    }\n\n    history = json.loads(DATA.read_text())\n    if entry[\"id\"] not in {h[\"id\"] for h in history}:   # de-dupe\n        history.append(entry)\n        DATA.write_text(json.dumps(history, indent=2))\n\n    return entry\n\n# ---------- /top?n=5 ----------\n@app.get(\"/top\")\ndef top(n: int = 5):\n    history = json.loads(DATA.read_text())\n    history.sort(key=lambda x: x[\"believability_score\"], reverse=True)\n    return history[:n]",
  "ocr_text": "6\n\no\nS\n\n\u00a9\n\nChatGPT File Edit View\n\n= List of research\n\nC2 GA\n\nEXPLORER\n\n2\n\nP > __pycache__\nv .venv\n> bin\noe > include\n> lib\n\n2\nFR\nA\n\n\u00a9 pyvenv.cfg\n\u00a9 .env\n\n@ excuse_api.py\n\n{} history.json\n= requirements.txt\n\n@\n> OUTLINE\na > TIMELINE\n\nGE & maine @0A4\n\n\\Y EXCUSE-GENERATOR\n\n4\n\nWindow\n\nU\nU\nU\nU\nU\n\nHelp\n\n& Artificial Intellige CO NLP_1.ipynb - Co CO NLP_1.ipynb - Cc ca LAUNCHED Glok M Launched - Artif Artificial\n\nO 8 =\n\naistudio.google.com/apikey\n\n|_Intelligence\n\n<> P excuse-generator By\nPROBLEMS @ OUTPUT DEBUGCONSOLE TERMINAL PORTS +yv\n70, in run_sync_in_worker_thread | >.|\nreturn await future 5\n\nt\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/anyio/_backends/_asyncio.py\", line 96\n7, in run\nresult = context.run(func, xargs)\nFile \"/Users/bhuvanarora/excuse-generator/excuse_api.py\", line 42, in generate\nout = json. loads (model. generate_content(full_prompt) .text) 1\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/google/generativeai/generative_models\n-py\", line 331, in generate_content\nresponse = self._client.generate_content(\nFile \"/Users/bhuvanarora/excuse-generator/. venv/1ib/python3. 11/site-packages/google/ai/generativelanguage_' vibeta/s .\nervices/generative_service/client.py\", line 835, in generate_content E\nresponse = rpc( '\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/google/api_core/gapic_v1/method. py\",\nline 131, in __call__\nreturn wrapped_func(xargs, **kwargs)\nFile \"/Users/bhuvanarora/excuse-generator/\n, line 294, in retry_wrapped_func\nreturn retry_target(\n\n-venv/lib/python3.11/site-packages/google/api_core/retry/retry_unary.py\"\u00bb\n\nFile \"/Users/bhuvanarora/excuse-generator/\n, line 156, in retry_target\nnext_sleep = _retry_error_helper( '\nFile \"/Users/bhuvanarora/excuse-generator/\nline 214, in _retry_error_helper\nraise final_exc from source_exc\nFile \"/Users/bhuvanarora/excuse-generator/\n, line 147, in retry_target\nresult = target()\n\n-venv/lib/python3.11/site-packages/google/api_core/timeout.py\", line 130\n\n-venv/lib/python3.11/site-packages/google/api_core/retry/retry_unary.py\"\n\n-venv/lib/python3.11/site-packages/google/api_core/retry/retry_base.py\",\n\n-venv/lib/python3.11/site-packages/google/api_core/retry/retry_unary.py\"\n\nFile \"/Users/bhuvanarora/excuse-generator/\n, in func_with_timeout\nreturn func(*args, +kkwargs)\n\nt\nARAAAAAAAAARARAARAAAADA t\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3\ne 78, in error_remapped_callable\nraise exceptions. from_grpc_error(exc) from exc\ngoogle.api_core.exceptions.NotFound: 404 models/gemini-pro is not found for API version vibeta, or is not supported\nfor generateContent. Call ListModels to see the list of available models and their supported methods\n\n.11/site-packages/google/api_core/grpc_helpers.py\", lin\n\nACINFO: Shutting down\n\nINFO: Waiting for application shutdown. '\nINFO: Application shutdown complete.\n\nINFO: Finished server process [97507]\n\nINFO: Stopping reloader process [97505]\n\n(.venv) bhuvanarora@Bhuvans\u2014-MacBook-Pro excuse-generator % source .venv/bin/activate\n\nis active\n\npip uninstall -y google-generativeai\n\npip install --no-cache-dir --upgrade google-generativeai\n\nFound existing installation: google-generativeai 0.8.5\n\nUninstalling google-generativeai-0.8.5:\n\nSuccessfully uninstalled google-generativeai-0.8.5\n\nERROR: Invalid requirement: '#': Expected package name at the start of dependency specifier 1\n\n# 1\n\n# make sure your venv Fa\n\n# installs 0.8.x\n\nLn7,Col1 Spaces:4 UTF-8 LF {} Python & 3.13.\nfile.pdf ITRV (1).pdf ITRV.pdf AIEUTIR EAI EY Iko to mtj Iko to MTJ (1).pdf\n\n9880\u00b0E68E20\n\n.\n\nOo\nLe}\n\nG@ROTO8\n\no API keys - Open.\n\n2%0) Fa\n\n(B\u00ae al-05-BBLena \u00a9 Openal \u00a9 Gemini API refer 96 Get API key | GX\n\nIntelligent Excuse Generator Plan >\nBhuvan\n\neco MO @G\n\nBOW\n\n\u201d 2 Upgrade the Gemini SDK (must be = 0.3)\nzsh\nh\n* bash O) Copy\nsource .venv/bin/activate\npip uninstall -y google-generativeai\npip install --no-cache-dir --upgrade google-generativeai\nVerify:\nbash O) Copy\npip show google-generativeai | grep Version\nOT OOOOOOEOOEOEOEeeeeeCC\u201cC*EC*#*PDW\n3 Put your key in .env\n\u00a9) Copy\nGEMINI_KEY=AI\u2014XXXXXXXXXXXXXXXXXXXXXXXX\n(Keep OPENAL APL KEY if it\u2019s still there; it\u2019s simply ignored.)\n4 Edit excuse_api.py\n1. Exactly one import/config block\u2014place it near the top (after load_dotenv):\nVv\npython \u00a9) Copy\n\u00a9 excuse_api.py x\n264-bit\nMessage Bhuvan\noe OT)\nIko to MTJ-=s-\n\n\u00a5\n\u201c)@ a =\n:\n\n.\n\n@ Wed Jul 2 10:35AM"
}
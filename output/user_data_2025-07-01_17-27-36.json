{
  "timestamp": "2025-07-01_17-27-36",
  "active_window": "Finder",
  "focused_text": "Could not extract AXValue from focused element",
  "clipboard": "import datetime\nimport pytesseract\nfrom PIL import ImageGrab\nimport subprocess\nimport json\nimport time\nimport pyperclip\nimport platform\n\n# On Windows, import win32gui for window title\ntry:\n    import win32gui\n    import win32con\nexcept ImportError:\n    win32gui = None\n    win32con = None\n\ndef is_windows():\n    return platform.system() == \"Windows\"\n\n# Get active window title (cross-platform)\ndef get_active_window_title():\n    if is_windows():\n        try:\n            hwnd = win32gui.GetForegroundWindow()\n            return win32gui.GetWindowText(hwnd)\n        except Exception as e:\n            return f\"Error (Win): {e}\"\n    else:\n        try:\n            script = 'tell application \"System Events\" to get name of (processes where frontmost is true)'\n            output = subprocess.check_output(['osascript', '-e', script]).decode().strip()\n            return output\n        except Exception as e:\n            return f\"Error (Mac): {e}\"\n\n# Improved function: get_focused_text() returns the AXValue string or error message, not printing anything\ndef get_focused_text():\n    if is_windows():\n        # Just return clipboard text on Windows\n        try:\n            return pyperclip.paste()\n        except Exception as e:\n            return f\"Clipboard error (Win): {e}\"\n    else:\n        try:\n            script = '''\n            tell application \"System Events\"\n                set frontApp to name of first application process whose frontmost is true\n                if frontApp is \"Visual Studio Code\" then\n                    keystroke \"a\" using command down\n                    delay 0.2\n                    keystroke \"c\" using command down\n                    delay 0.2\n                    return \"CLIPBOARD\"\n                else\n                    tell application process frontApp\n                        try\n                            set focusedElement to value of attribute \"AXFocusedUIElement\"\n                            set focusedValue to value of attribute \"AXValue\" of focusedElement\n                            return focusedValue\n                        on error\n                            return \"Could not extract AXValue from focused element\"\n                        end try\n                    end tell\n                end if\n            end tell\n            '''\n            result = subprocess.run(['osascript', '-e', script], capture_output=True, text=True)\n            output = result.stdout.strip()\n            if output == \"CLIPBOARD\":\n                time.sleep(0.3)\n                clipboard_content = pyperclip.paste()\n                return clipboard_content\n            elif output == \"\":\n                return \"Could not extract AXValue from focused element\"\n            else:\n                return output\n        except Exception as e:\n            return f\"Error (Mac): {e}\"\n\n# Take screenshot\ndef capture_screenshot(filename):\n    img = ImageGrab.grab()\n    img.save(f\"output/{filename}\")\n    return img\n\n# Run OCR on image\ndef run_ocr(image):\n    text = pytesseract.image_to_string(image)\n    return text.strip()\n\n## Main capture logic (unchanged)\n\nif __name__ == \"__main__\":\n    import json\n    import time\n    import pyperclip\n    try:\n        while True:\n            timestamp = datetime.datetime.now().strftime(\"%Y-%m-%d_%H-%M-%S\")\n            screenshot_path = f\"screenshot_{timestamp}.png\"\n            active_window = get_active_window_title()\n            # Use get_focused_text() for textbox_text\n            textbox_text = get_focused_text()\n            # Clipboard logic: On Windows, clipboard and focused_text are the same; on Mac, they may differ\n            if is_windows():\n                clipboard_content = textbox_text\n            else:\n                clipboard_content = pyperclip.paste()\n            image = capture_screenshot(screenshot_path)\n            ocr_text = run_ocr(image)\n            import os\n            # Read the VS Code live text file (cross-platform)\n            vscode_text = \"\"\n            if platform.system() == \"Darwin\":\n                path = os.path.expanduser(\"~/Desktop/vscode_live_text.txt\")\n            elif platform.system() == \"Windows\":\n                path = os.path.expanduser(\"~/Desktop/vscode_live_text.txt\")\n            else:\n                path = \"/tmp/vscode_live_text.txt\"\n\n            try:\n                with open(path, \"r\", encoding=\"utf-8\") as f:\n                    vscode_text = f.read().strip()\n            except FileNotFoundError:\n                vscode_text = \"VS Code text not found.\"\n\n            data = {\n                \"timestamp\": timestamp,\n                \"active_window\": active_window,\n                \"focused_text\": textbox_text,\n                \"clipboard\": clipboard_content,\n                \"vscode_text\": vscode_text,\n                \"ocr_text\": ocr_text\n            }\n            with open(f\"output/user_data_{timestamp}.json\", \"w\") as f:\n                json.dump(data, f, indent=2)\n            with open(\"output/live_output.json\", \"w\") as f:\n                json.dump(data, f, indent=4)\n            time.sleep(20)\n    except KeyboardInterrupt:\n        print(\"Program interrupted by user.\")",
  "vscode_text": "<!DOCTYPE html>\n<html>\n  <body style=\"margin: 0; background: rgba(0,0,0,0.7); color: white; font-family: sans-serif;\">\n    <div style=\"-webkit-app-region: drag; padding: 10px; background: rgba(0,0,0,0.8);\">\n      <pre id=\"output\" style=\"white-space: pre-wrap; word-wrap: break-word;\">Waiting for data...</pre>\n    </div>\n    <script>\n      const { ipcRenderer } = require('electron');\n      ipcRenderer.on('update-prediction', (event, data) => {\n        document.getElementById('output').textContent = data;\n      });\n    </script>\n  </body>\n</html>",
  "ocr_text": "@ Finder File Edit View Go Window\u2019 Help\n'\n\u2018 \u2018\nn 12 4\n10 2\n-9 3-\n-8 an\n7\n\u2018 \u00ae Buddy y 7 main v Current File v [> x\nPro} 305\nOo | eee < output Be o ooo Y Ov Q\nJULY Back/Forward View Action Search\nMTtTw oOo \u00bbY/\nA \u00a9 Air\n)\n789 34 irDrop\n14 15 16 \u00a9 Recents\n21 22 23: 0 user_data_2025- user_data_2025- screenshot_2025 screenshot_2025 user_data_2025- user_data_2025-\na cp em | ES A. Applicatio... 07-01.1...-20.json 07-01.1...-21,json -07-01_..-45.png -07-01_,..-47.png 07-01.1...-45.json 07-01_1...-47,json\nsee {5 Documents\n(=) Desktop\n\u00a9 Images screenshot_2025 screenshot_2025 user_data_2025- user_data_2025- screenshot_2025 screenshot_2025\n-07-01_...9-11.png -07-01_...9-12.png 07-01_1...9-11.json 07-01_1...-12.json -07-01_...-37.png -07-01_...-38.png\n\u00a9 Downloads\n5 (@} bhuvaner... : a\nRun user_data_2025- user_data_2025- screenshot_2025 user_data_2025- screenshot_2025 user_data_2025-\n\u00a9 iCloud Dri... 07-01.1...-37json 07-011...-38.json -07-01_..-02.png 07-01_1...-02.json -07-01_...0-27.png 07-011...-27.json\n@\n9 Shared\n> io\nv\n@ -_ ) Bhuvan's... screenshot_2025 user_data_2025- screenshot_2025 user_data_2025- screenshot_2025 user_data_2025-\na -07-01_...-49.png 07-01_1...-49.json -07-01_...1-12.png 07-01_1...1-12.json -07-01_...1-34.png 07-01_1...-34.json\n=| 8 Dia\n[= | \u00a9 Wonde...\n\u00a9 \u00ab\nscreenshot_2025 user_data_2025- screenshot_2025 user_data_2025- screenshot_2025 user_data_2025-\nPe @ Handouts -07-01_..1-57.png 07-01_1...1-57.json -07-01_...-20.png 07-011...-20.json -07-01_..2-41.png 07-01_1...-41.json\n@) @ Red\n99 @ Orange\n@ Yellow screenshot_2025 user_data_2025- screenshot_2025 user_data_2025- screenshot_2025 user_data_2025-\n0 Buddy -07-01_...-03.png 07-01.1...-03.json -07-01_...-23.png 07-01_1...-23.json -07-01_,..-29.png 07-01_1...-29.json\n@ Green\n\u00a9 All Tags... a\n\nearnanchat ONO\n\ntaanr_slatn ONO\n\naarnanc hat _9nor\n\ntiene alntan_2NOE\n\naarnanc hat nor\n\ntanr alntan_2N9E_\n\nLonvert_sySste\u00e9\n\nabout a code-r\nseract, PIL, s\n\nnon 3.13 (Buddy)\n\nin\n\nooO08\n\n1%G) FQ BS\n\nPopup JSON Viewer >\n\nBhuvan\n\n@ Tu\n\nPam\n\nThe warning you're seeing \u2014\n[Warning] Failed to delete screenshot: name 'os' is\n\nnot defined \u2014\n\nje Jul 1 5:27PM\n\nmeans the os module wasn't imported in the same file where you're\n\ndeleting the screenshot.\n\n7 Fix\n\nAdd this line at the top of your gatheruserdata.py file (or wherever\n\nyou're doing os. remove(...)):\n\npython\n\nimport os\n\nEven though os is already imported in other places (like\nactivity_analyzer.py), each Python file (module) needs to\n\nimport what it uses directly.\n\n\u00a9) Copy\n\nOnce you add that, the screenshot deletion will work correctly. Want\nme to auto-insert that now?\n\noO @m\n\n(\u00a9) activity_analyzer.py x\n\nMessage Bhuvan\n\n+ @\u00ae\n\nS80\u00b0e8GE20 \u00a90980 &=F\n\n6\n\ncn\n\nWw\n\n(\u00a9) Buddy \u2014 activity_analyzer.py \u2014 Editor 2 x"
}
{
  "timestamp": "2025-07-02_10-20-52",
  "active_window": "Electron",
  "focused_text": "Could not extract AXValue from focused element",
  "clipboard": "curl -X POST http://127.0.0.1:8000/generate \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\"scenario\":\"missed class\", \"urgency\":\"panic\"}'",
  "vscode_text": "# excuse_api.py\nimport os, json, time, hashlib\nfrom pathlib import Path\nfrom dotenv import load_dotenv\nload_dotenv()          # \u2190 NEW: pulls OPENAI_API_KEY from .env\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\n\nimport google.generativeai as genai\ngenai.configure(api_key=os.getenv(\"GEMINI_KEY\"))\nmodel = genai.GenerativeModel(\"gemini-pro\")\n# ---------- simple \u201cDB\u201d ----------\nDATA = Path(\"history.json\")\nif not DATA.exists():\n    DATA.write_text(\"[]\")          # seed empty list\n\n\n\n# ---------- FastAPI app ----------\napp = FastAPI()\n\nclass Req(BaseModel):\n    scenario: str  # e.g. \"missed class\"\n    urgency: str   # \"low\" | \"medium\" | \"panic\"\n\nSYSTEM_PROMPT = \"\"\"\nYou are an elite alibi-creator.\nReturn a JSON with:\n  excuse               (\u2264 50 words),\n  believability_score  (0-1),\n  chat_log             (short WhatsApp-style proof)\n\"\"\"\n\n# ---------- /generate ----------\n@app.post(\"/generate\")\ndef generate(r: Req):\n    prompt = f\"Scenario: {r.scenario}\\nUrgency: {r.urgency}\"\n    full_prompt = f\"{SYSTEM_PROMPT}\\n{prompt}\"\n    out = json.loads(model.generate_content(full_prompt).text)\n    entry = {\n        \"id\": hashlib.md5(out[\"excuse\"].encode()).hexdigest(),\n        \"ts\": time.time(),\n        **out,\n    }\n\n    history = json.loads(DATA.read_text())\n    if entry[\"id\"] not in {h[\"id\"] for h in history}:   # de-dupe\n        history.append(entry)\n        DATA.write_text(json.dumps(history, indent=2))\n\n    return entry\n\n# ---------- /top?n=5 ----------\n@app.get(\"/top\")\ndef top(n: int = 5):\n    history = json.loads(DATA.read_text())\n    history.sort(key=lambda x: x[\"believability_score\"], reverse=True)\n    return history[:n]",
  "ocr_text": "Code File Edit Selection View Go Run Terminal Window\u2019 Help 3 2%8 ) & S Wed Jul 2 10:20AM\nA > (o} Oo\n= List of research @ Artificial Intellige CO NLP_1.ipynb - Co CO NLP_1.ipynb - Co ca LAUNCHED Glob M Launched - Artif Artificial_Intelligence [| Al-05-BBLEN4 \u00a9 OpenAl coy API keys - Open/ (S) Gemini API refer +\u201d Get API key | GX\nO<\u00abvr cea O 8 & aistudio.google.com/apikey Intelligent Excuse Generator Plan > \u2014\nBhuvan\n6 ee@ \u20ac > \u00a3 excuse-generator By Cob WwW altt OU Copy\neq EXPLORER J Welcome \u00ae excuse_api.py 4,U X % .env U Dy &% . . .\nyaall - - res = client.chat.completions.create(\n\\ EXCUSE-GENERATOR \u00ae excuse_api.py > \u00a9 generate \u2014\" nq\"\n5 cache - model=\"gpt\u201440-mini\",\n\u00a9 p See 33 ! - messages=[\n~ ven 34 # /generate ---------- I - {\"role\": \"system\", \"content\": SYSTEM_PROMPT},\nIn waa \" \" \" \" \" \"\n- role\": ser content\": prompt\n& > include 35 @app.post(\"/generate\") \u2018 a ] ! \u201c ' prompt},\n. t\nS| 2! 36 def generate(r: Req): - temperature=0.8,\n& \u00a9 pyvenv.cfg U n . . n a )\nca u 37 prompt = f\"Scenario: {r.scenario}\\nUrgency: {r.urgency} . .\nFe : 7 i - out = json.loads(res.choices[@].message.content)\n@ excuse_apipy 4, 38 full_prompt = f\"{SYSTEM_PROMPT}\\n{prompt} + full_prompt = f\"{SYSTEM_PROMPT}\\n{prompt}\"\nA 0 ee ot . 39 out = json. loads(model.generate_content(full_prompt) . text) a out = json.loads(model.generate_content(full_prompt).text)\n= requirements.tx'\n40 entry = {\n41 \"id\": hashlib.md5(out[\"excuse\"].encode()).hexdigest(), (Everything else\u2014history file, FastAPI routes\u2014stays the same.)\n42 \"ts\": time.time(),\n43 **OUt, \u2014 Save the file.\n44 }\n45\n46 history = json. loads (DATA. read_text ( )) 5 Restart & test\n47 if entry[\"id\"] not in {h[\"id\"] for h in history}: # de-dupe\n48 history.append(entry) bash \u00a9 Copy\n49 DATA.write_text(json.dumps(history, indent=2) )\n50 uvicorn excuse_api:app \u2014-reload\n51 return entry\n52 Open a second terminal tab:\n53 2 ====ssaao= top?n=5 ------\u2014---\u2014\nPas bash Y Copied\nBA faann aat(\"! /tan\"!)\nPROBLEMS @ OUTPUT DEBUG CONSOLE TERMINAL PORTS. + vous AX\nsoe so\":\"pissed class, * howe e uy + pythona.11 curl -X POST http://127.0.0.1:8000/generate \\\nIntersat iP seers esse class\", \u201curgency\":\"panic\"} = py' a -H \"Content-Type: application/json\" N\n\u00a9 bhuvanarora@Bhuvans\u2014MacBook-Pro excuse-generator % curl -X POST http://127.0.0.1:8000/generate \\ I | saan -d '{\"scenario\":\"missed class\", \"urgency\":\"panic\"}'\n-H \"C Tr 8 Li ion/j PY\n-d OFTEN ee] aR GLa PECaAkTSC\nInternal Server Errorg t .\n(2) @ bhuvanarora@Bhuvans\u2014MacBook-Pro excuse-generator % curl -X POST http://127.0.0.1:8000/generate \\ You should get a JSON payload like:\n-H \"Content-Type: application/json\" \\ I\n> OUTLINE -d '{\"scenario\":\"missed class\", \"urgency\":\"panic\"}' v\n$03 Internal Server Errorg ann \u2014\n> TIMELINE bhuvanarora@Bhuvans\u2014MacBook-Pro excuse-generator % ff\nwy maint @ @o0A4 Ln 39,Col63 Spaces:4 UTF-8 LF {} Python @ 3.13.264-bit [\u00a2\n- a 7 Message Bhuvan\nma & .-: 2@\nSB\n\nAIEUTIR EAI EY Iko to MTJ-s-\n\nfile.pdf\n\nITRV (1).pdf ITRV.pdf\n\n92068820 eo\n\nIko to mtj Iko to MTJ (1).pdf\n\n200 af"
}
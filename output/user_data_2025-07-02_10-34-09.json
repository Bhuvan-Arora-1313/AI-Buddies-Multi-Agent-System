{
  "timestamp": "2025-07-02_10-34-09",
  "active_window": "Electron",
  "focused_text": "Could not extract AXValue from focused element",
  "clipboard": "curl -X POST http://127.0.0.1:8000/generate \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\"scenario\":\"missed class\", \"urgency\":\"panic\"}'",
  "vscode_text": "# excuse_api.py\nimport os, json, time, hashlib\nfrom pathlib import Path\nfrom dotenv import load_dotenv, find_dotenv\nload_dotenv(find_dotenv(), override=True)\n\n\n\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\n\nimport google.generativeai as genai\ngenai.configure(api_key=os.getenv(\"GEMINI_KEY\"))\nmodel = genai.GenerativeModel(\"gemini-pro\")\n# ---------- simple \u201cDB\u201d ----------\nDATA = Path(\"history.json\")\nif not DATA.exists():\n    DATA.write_text(\"[]\")          # seed empty list\n\n\n\n# ---------- FastAPI app ----------\napp = FastAPI()\n\nclass Req(BaseModel):\n    scenario: str  # e.g. \"missed class\"\n    urgency: str   # \"low\" | \"medium\" | \"panic\"\n\nSYSTEM_PROMPT = \"\"\"\nYou are an elite alibi-creator.\nReturn a JSON with:\n  excuse               (\u2264 50 words),\n  believability_score  (0-1),\n  chat_log             (short WhatsApp-style proof)\n\"\"\"\n\n# ---------- /generate ----------\n@app.post(\"/generate\")\ndef generate(r: Req):\n    prompt = f\"Scenario: {r.scenario}\\nUrgency: {r.urgency}\"\n    full_prompt = f\"{SYSTEM_PROMPT}\\n{prompt}\"\n    out = json.loads(model.generate_content(full_prompt).text)\n    entry = {\n        \"id\": hashlib.md5(out[\"excuse\"].encode()).hexdigest(),\n        \"ts\": time.time(),\n        **out,\n    }\n\n    history = json.loads(DATA.read_text())\n    if entry[\"id\"] not in {h[\"id\"] for h in history}:   # de-dupe\n        history.append(entry)\n        DATA.write_text(json.dumps(history, indent=2))\n\n    return entry\n\n# ---------- /top?n=5 ----------\n@app.get(\"/top\")\ndef top(n: int = 5):\n    history = json.loads(DATA.read_text())\n    history.sort(key=lambda x: x[\"believability_score\"], reverse=True)\n    return history[:n]",
  "ocr_text": "\u00e9\n\no\nS\n\n\u00a9\n\nCode File Edit Selection\n\n= List of research\n\n\u20ac > CG @\nee0@\n\n| oO EXPLORER\n\n\\Y EXCUSE-GENERATOR\n\nP > __pycache__\n\nv venv\npa > bin\n> include\nS > lib\n& \u00a9 pyvenv.cfg\n\nU\n\u00a9 .env U\nES @ excuse_api.py 4,U\nU\nU\n\n{} history.json\nA = requirements.txt\n\n@\n$03 > OUTLINE\n\n> TIMELINE\n\nGE & maine @0A4\n\nGo Run_ Terminal Window\u2019 Help\n\n@ Artificial Intellige CO NLP_1.ipynb - Co CO NLP_1.ipynb - Co ca LAUNCHED Glob M Launched - Artif Artificial_Intelligence\n\nO 8 =\n\n\u20ac >\n\naistudio.google.com/apikey\n\n08 \u00a9\ntoy oo yw &\n\nn run_in_threadpool | >.) zsh\nreturn await anyio.to_thread. run_sync( func)\n\nPP excuse-generator\n\nPROBLEMS @ OUTPUT DEBUG CONSOLE TERMINAL PORTS.\n\n>-| zsh\n\nt\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/anyio/to_thread.py\", line 56, in run_\nsync\nreturn await get_async_backend().run_sync_in_worker_thread(\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/anyio/_backends/_asyncio.py\", line 24\n70, in run_sync_in_worker_thread\nreturn await future\n\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/anyio/_backends/_asyncio.py\", line 96\n7, in run\nresult = context.run(func, xargs)\nFile \"/Users/bhuvanarora/excuse-generator/excuse_api.py\", line 42, in generate ul\nout = json. loads (model. generate_content(full_prompt) .text) I\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/google/generativeai/generative_models\n-py\", line 331, in generate_content\nresponse = self._client.generate_content(\nFile \"/Users/bhuvanarora/excuse-generator/. venv/lib/python3. 11/site-packages/google/ai/generativelanguage_' vibeta/s .\nervices/generative_service/client.py\", line 835, in generate_content\nresponse = rpc(\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/google/api_core/gapic_v1/method. py\",\nline 131, in __call__\nreturn wrapped_func(xargs, **kwargs)\n\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/google/api_core/retry/retry_unary.py\"\n, line 294, in retry_wrapped_func\nreturn retry_target(\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/google/api_core/retry/retry_unary.py\"\n, line 156, in retry_target\nnext_sleep = _retry_error_helper( |\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/google/api_core/retry/retry_base.py\",\nline 214, in _retry_error_helper L\nraise final_exc from source_exc 1\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/google/api_core/retry/retry_unary.py\"\n, line 147, in retry_target\nresult = target()\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/google/api_core/timeout.py\", line 130\n, in func_with_timeout\nreturn func(*args, +kkwargs)\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/google/api_core/grpc_helpers.py\", lin\ne 78, in error_remapped_callable\nraise exceptions. from_grpc_error(exc) from exc\ngoogle.api_core.exceptions.NotFound: 404 models/gemini-pro is not found for API version vibeta, or is not supported \"\nfor generateContent. Call ListModels to see the list of available models and their supported methods.\nACINFO: Shutting down\n\nINFO: Waiting for application shutdown.\nINFO: Application shutdown complete.\nINFO: Finished server process [97507]\nINFO: Stopping reloader process [97505]\n\n(.venv) bhuvanarora@Bhuvans\u2014-MacBook-Pro excuse-generator % | |\nQ Ln7,Col1\n\nITRV (1).pdf\n\n{} Python & 3.13.264-bit\n\nam =\n\nIko to MTJ (1).pdf\n\nSpaces:4 UTF-8 LF\n\nfile.pdf\n\nITRV.pdf AIEUTIR EAI EY Iko to MTJ-\n\nIko to mtj\n\n. .\n\n1B al-05-BBLEN4\n\nG@ROTO8\n\ncoy API keys - Open/\u00e9\n\n2%0) =F\n\n\u00a9 OpenAl \u00a9 Gemini API refer\n\nQs\n\n96 Get API key | G X\n\n\u2014\n\nS@G80\u00bbaSG2e O92\n\nwow\n\nIntelligent Excuse Generator Plan >\nBhuvan\n\nuo wv\n\npleae tell againwhat am i suppsoed ot do\n\nThought for a couple of seconds >\n\nJust follow each step in order.\n\n1 Stop the server that\u2019s running\n\nbash\n\nCtr1-C\n\n2 Upgrade the Gemini SDK (must be = 0.3)\n\nbash\n\nsource .venv/bin/activate\npip uninstall -y google-generativeai\npip install --no-cache-dir --upgrade google-generativeai\n\nVerify:\n\nbash\n\npip show google-generativeai\n\n| grer\n\n\u201cersion\nVv\n\nMessage Bhuvan\n\n+ @\u00ae@ ov\n\n9 98\n\nBelow is a clear, start-to-finish checklist to get your VS Code FastAPI project working with\nGemini Pro (free tier).\n\n\u00a9) Copy\n\n\u00a9) Copy\n\n\u00a9) Copy\n\n@ Wed Jul 2 10:34AM"
}
{
  "timestamp": "2025-07-02_09-49-29",
  "active_window": "ChatGPT",
  "focused_text": "Could not extract AXValue from focused element",
  "clipboard": "curl -X POST http://127.0.0.1:8000/generate \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\"scenario\":\"missed class\",\"urgency\":\"panic\"}'",
  "vscode_text": "# excuse_api.py\nimport os, json, time, hashlib\nfrom pathlib import Path\nfrom dotenv import load_dotenv\nload_dotenv()          # \u2190 NEW: pulls OPENAI_API_KEY from .env\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\nfrom openai import OpenAI\n\n# ---------- simple \u201cDB\u201d ----------\nDATA = Path(\"history.json\")\nif not DATA.exists():\n    DATA.write_text(\"[]\")          # seed empty list\n\n# ---------- OpenAI client ----------\nclient = OpenAI(api_key=os.getenv(\"OPENAI_API_KEY\"))\n\n# ---------- FastAPI app ----------\napp = FastAPI()\n\nclass Req(BaseModel):\n    scenario: str  # e.g. \"missed class\"\n    urgency: str   # \"low\" | \"medium\" | \"panic\"\n\nSYSTEM_PROMPT = \"\"\"\nYou are an elite alibi-creator.\nReturn a JSON with:\n  excuse               (\u2264 50 words),\n  believability_score  (0-1),\n  chat_log             (short WhatsApp-style proof)\n\"\"\"\n\n# ---------- /generate ----------\n@app.post(\"/generate\")\ndef generate(r: Req):\n    prompt = f\"Scenario: {r.scenario}\\nUrgency: {r.urgency}\"\n    res = client.chat.completions.create(\n        model=\"gpt-4o-mini\",\n        messages=[\n            {\"role\": \"system\", \"content\": SYSTEM_PROMPT},\n            {\"role\": \"user\",   \"content\": prompt},\n        ],\n        temperature=0.8,\n    )\n    out = json.loads(res.choices[0].message.content)\n\n    entry = {\n        \"id\": hashlib.md5(out[\"excuse\"].encode()).hexdigest(),\n        \"ts\": time.time(),\n        **out,\n    }\n\n    history = json.loads(DATA.read_text())\n    if entry[\"id\"] not in {h[\"id\"] for h in history}:   # de-dupe\n        history.append(entry)\n        DATA.write_text(json.dumps(history, indent=2))\n\n    return entry\n\n# ---------- /top?n=5 ----------\n@app.get(\"/top\")\ndef top(n: int = 5):\n    history = json.loads(DATA.read_text())\n    history.sort(key=lambda x: x[\"believability_score\"], reverse=True)\n    return history[:n]",
  "ocr_text": "@ ChatGPT File Edit\n\nSC > G\u00e9A\n&D\n\n@ O\n\nEXPLORER\n\n> __pycache__\n\n\u00a9\n\nv venv\n> bin\n> include\n> lib\npyvenv.cfg\n.env\n@ excuse_api.py\n{} history.json\n= requirements.txt\n\n> OUTLINE\n> TIMELINE\n\nWE & maine @0A4\n\nView\n\nWindow\n\n\\Y EXCUSE-GENERATOR\n\nU\nU\n4,U\nU\nU\n\n-d '{\"scenario\":\"missed class\",\"urgency\":\"panic\"}'\n\nInternal Server Errorg\nbhuvanarora@Bhuvans\u2014MacBook-Pro excuse-generator % o\n\nQ Ln5,Col63 Spaces:4 UTF-8 LF\n\n{} Python\n\nHelp G\u00a9 FCO O S 3%) F Q\nx FE x co x co x ca x | x Artificial_Intelligence_Capstone_ X @\nO OD file:///Users/bhuvanarora/Downloads/Artificial_Intelligence_Capstone_Project.pdf.pdf eee OG Intelligent Excuse Generator Plan >\nBhuvan\n< P excuse-generator By co oe\nJ Welcome @ excuse_api.py 4,U X env. DY QO -y OPENAI_API_KEY=sk\u2014XXXXXXXXXXXXXXXXXXXXKXKXKXKXKKKXKXKXKXKXKXKXKXK KK KK\n@ excuse_api.py > ...\n\n# excuse_api.py = 3. Save (38S / Ctrl S).\nimport os, json, time, hashlib Your .gitignore is already keeping . env out of Git, so you're safe.\nfrom pathlib import Path\nfrom dotenyv import load_dotenv (If you're on the free tier and got-\u201440-mini isn\u2019t enabled, change the model in\n\n5 load_dotenv() # \u2014 NEW: pulls OPENAI_API_KEY from .env cnensa_ adap Teaie-8. Saude boar cantatlaey)\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\nfrom openai import OpenAI\n\noe @ Restart the server\n(SSS simple \u201cDB\u201d ---------\u2014\nDATA = Path(\"history.json\") In the terminal that's running Uvicorn:\nif not DATA.exists(): bash\nDATA.write_text(\"[]\") # seed empty list as\n(SSS OpenAI client ---------- Ctrl-C\nclient = OpenAI(api_key=os.getenv(\"OPENAI_API_KEY\") )\nuvicorn excuse_api:app --reload\nPROBLEMS @ OUTPUT DEBUG CONSOLE TERMINAL PORTS. ar v o AS\n@ bhuvanarora@Bhuvans\u2014MacBook-Pro excuse-generator % curl -X POST http://127.0.0.1:8000/generate \\ p >.) python3.11\n-H \"Content-Type: application/json\" \\ >] zsh\n\nTest again\n\nOpen a second terminal tab and run:\n\nbash\n\n\u20ac Work with Code Tab x\n\n8 3.13.264-bit 0)\n\nMessage Bhuvan\n\n+ @\u00ae ov\n\nS800eEGE80 \u00a98210 &*\n\n@ Wed Jul 2 9:49AM\n\nx\n\n6)\nil\n\n% \u00bb\n\n\u00a9) Copy\n\n\u00a9) Copy\n\n=]"
}
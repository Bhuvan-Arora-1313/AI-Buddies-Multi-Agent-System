{
  "timestamp": "2025-07-02_10-36-21",
  "active_window": "Electron",
  "focused_text": "Could not extract AXValue from focused element",
  "clipboard": "pip uninstall -y google-generativeai\npip install --no-cache-dir --upgrade google-generativeai ",
  "vscode_text": "# excuse_api.py\nimport os, json, time, hashlib\nfrom pathlib import Path\nfrom dotenv import load_dotenv, find_dotenv\nload_dotenv(find_dotenv(), override=True)\n\n\n\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\n\nimport google.generativeai as genai\ngenai.configure(api_key=os.getenv(\"GEMINI_KEY\"))\nmodel = genai.GenerativeModel(\"gemini-pro\")\n# ---------- simple \u201cDB\u201d ----------\nDATA = Path(\"history.json\")\nif not DATA.exists():\n    DATA.write_text(\"[]\")          # seed empty list\n\n\n\n# ---------- FastAPI app ----------\napp = FastAPI()\n\nclass Req(BaseModel):\n    scenario: str  # e.g. \"missed class\"\n    urgency: str   # \"low\" | \"medium\" | \"panic\"\n\nSYSTEM_PROMPT = \"\"\"\nYou are an elite alibi-creator.\nReturn a JSON with:\n  excuse               (\u2264 50 words),\n  believability_score  (0-1),\n  chat_log             (short WhatsApp-style proof)\n\"\"\"\n\n# ---------- /generate ----------\n@app.post(\"/generate\")\ndef generate(r: Req):\n    prompt = f\"Scenario: {r.scenario}\\nUrgency: {r.urgency}\"\n    full_prompt = f\"{SYSTEM_PROMPT}\\n{prompt}\"\n    out = json.loads(model.generate_content(full_prompt).text)\n    entry = {\n        \"id\": hashlib.md5(out[\"excuse\"].encode()).hexdigest(),\n        \"ts\": time.time(),\n        **out,\n    }\n\n    history = json.loads(DATA.read_text())\n    if entry[\"id\"] not in {h[\"id\"] for h in history}:   # de-dupe\n        history.append(entry)\n        DATA.write_text(json.dumps(history, indent=2))\n\n    return entry\n\n# ---------- /top?n=5 ----------\n@app.get(\"/top\")\ndef top(n: int = 5):\n    history = json.loads(DATA.read_text())\n    history.sort(key=lambda x: x[\"believability_score\"], reverse=True)\n    return history[:n]",
  "ocr_text": "@ Code File Edit Selection View Go Run Terminal Window Help 6 \u00a38 \u00a9G O S 2a) F Q S @\u00a9 Wed Jul2 10:36AM\n\n= List of research @ Artificial Intellige CO NLP_1.ipynb - Co CO NLP_1.ipynb - Co ca LAUNCHED Glob M Launched - Artif Artificial_Intelligence [| Al-05-BBLEN4 \u00a9 OpenAl coy API keys - Open/ (S) Gemini API refer +\u201d Get API key | GX\nO<\u00abvr cea O 8 & aistudio.google.com/apikey Intelligent Excuse Generator Plan > \u2014\nBhuvan\n6 ee@ <> PP excuse-generator By Cob WwW Venie\neq | oO EXPLORER oe J Welcome \u00ae excuse_api.py 4,U X % .env U Dy &% vee .\nwl \\ EXCUSE-GENERATOR \u00ae excuse_api.py > ... bash O) Copy\n\u00a9 {> \u2014Pycache_ 9 from fastapi import FastAPI a\nes 10 from pydantic import BaseModel fl pip show google-generativeai | grep Version\noe > include 11\nimport google.aenerativeai as aenai\n> a 12 port googl t\n. ome . 13 genai.configur (function) GenerativeModel: Any )\nHS @ excuse_apipy 4,U 14 model = genai.GenerativeModel(\"gemini-pro\") 3 Put your key in .env\n{} history.json U 15 # ---------- simple \u201cDB\u201d \u2014---------\nA = requirements.txt U . .\n16 DATA = Path(\"history. json\") \u00a9) Copy\n17 if not DATA.exists():\n18 DATA.write_text(\"[]\") # seed empty list GEMINI_KEY=AI\u2014XXXXXXXXXXXXXXXXXXXXXXXX\n19\n(Keep OPENAL APL KEY if it\u2019s still there; it\u2019s simply ignored.)\nPROBLEMS @ OUTPUT DEBUG CONSOLE TERMINAL PORTS doy oo A %\n5.@->google-generativeai) (5.5.2) | 2S zsh\n\nRequirement already satisfied: pyasn1-modules>=0.2.1 in ./.venv/lib/python3.11/site-packages (from google-auth>=2.15 .\n-@->google-generativeai) (0.4.2)\nRequirement already satisfied: rsa<5,>=3.1.4 in ./.venv/lib/python3.11/site-packages (from google-auth>=2.15.@->goog . .\nle-generativeai) (4.9.1) 4 Edit excuse_api.py\nRequirement already satisfied: charset_normalizer<4,>=2 in ./.venv/lib/python3.11/site-packages (from requests<3.0.005\n,>=2.18.0->google-api-core->google-generativeai) (3.4.2) i\nRequirement already satisfied: _Adna<4,>=2.5 in ./.venv/lib/python3.11/site-packages (from requests<3.0.0,>=2.18.0->g 1. Exactly one import/config block\u2014place it near the top (after load_dotenv):\n00gle-api-core->google-generativeai) (3.10)\nRequirement already satisfied: urllib3<3,>=1.21.1 in ./.venv/lib/python3.11/site-packages (from requests<3.0.0,>=2.1,\n8.0->google-api-core->google-generativeai) (2.5.0)\nRequirement already satisfied: certifi>=2017.4.17 in ./.venv/lib/python3.11/site-packages (from requests<3.0.0,>=2.1 python O Copy\n8.0->google-api-core->google-generativeai) (2025.6.15)\nRequirement already satisfied: pyasn1>=0.1.3 in ./.venv/lib/python3.11/site-packages (from rsa<5,>=3.1.4->google-aut\"\nh>=2.15.@->google-generativeai) (0.6.1) - 9 G G\nRequirement already satisfied: httplib2<1.0.0,>=0.19.@ in ./.venv/lib/python3.11/site-packages (from google-api-pyth import google.generativeai as genal\non-client->google-generativeai) (0.22.0) sibyoveh kaoes (4 | genai.configure(api_key=os.getenv(\"GEMINI_KEY\") )\nRequirement already satisfied: google-auth-httplib2<1.0.0,>=0.2.@ in ./.venv/lib/python3.11/site-packages rom goog _ | 4 \" oo \"\nle-api-python-client-sgoogle-generativeai) (0.2.0) model = genai.GenerativeModel(\"models/gemini-pro\" ) :\nRequirement already satisfied: uritemplate<5,>=3.0.1 in ./.venv/lib/python3.11/site-packages (from google-api-python\u00a7\n-client->google-generativeai) (4.2.0)\nRequirement already satisfied: pyparsing!=3.0.0, !=3.0.1, !=3.0.2, !=3.0.3,<4,>=2.4.2 in ./.venv/lib/python3.11/site-pa\nckages (from httplib2<1.0.0,>=0.19.@->google-api-python-client->google-generativeai) (3.2.3)\nRequirement already satisfied: annotated\u2014-types>=0.6.0 in ./.venv/lib/python3.11/site\u2014-packages (from pydantic->google,\n-generativeai) (0.7.0) .\nRequirement already satisfied: pydantic-core==2.33.2 in ./.venv/lib/python3.11/site-packages (from pydantic->google- 1 2. Call the model (replace your old OpenAl stanza) . |\ngenerativeai) (2.33.2) 1\n\n(2) Requirement already satisfied: typing-inspection>=0.4.@ in ./.venv/lib/python3.11/site-packages (from pydantic->goog Vv\nle-generativeai) (0.4.1) python (D Copy\nDownloading google_generativeai-@.8.5-py3-none-any.whl (155 kB)\n\nsb > OUTLINE Installing collected packages: google-generativeai all\n\nSuccessfully installed google-generativeai-0.8.5 Q A\n> TIMELINE (.venv) bhuvanarora@Bhuvans-MacBook-Pro excuse-generator % [] excuse_apl.py x\n\nwy % main* \u00ae@ @oA4 Q Ln7,Col1 Space UTF-8 LF {} Python & 3.13.264-bit\n\ney : =| Message Bhuvan\n| ZB ves \u00ae\n\nB file.pdf ITRV (1).pdf ITRV.pdf JETIR2101184 Iko to mtj Iko to MTJ (1).pdf = Iko to MTJ-s.-=. were rere\n\nF\n. . . . . . . . . .\n\nco}"
}
{
  "timestamp": "2025-07-02_11-12-59",
  "active_window": "Electron",
  "focused_text": "Could not extract AXValue from focused element",
  "clipboard": "# Intelligent Excuse Generator\n\nFastAPI micro-service that creates believable excuses plus a chat-log \u201cproof,\u201d\nstores history, ranks past excuses, and simulates an emergency text\u2014powered by\nGoogle Gemini (via LangChain).\n\n## 1 . Setup\n```bash\ngit clone https://github.com/<yourUser>/excuse-generator.git\ncd excuse-generator\npython -m venv .venv && source .venv/bin/activate\npip install -r requirements.txt",
  "vscode_text": "# Intelligent Excuse Generator\n\nFastAPI micro-service that creates believable excuses plus a chat-log \u201cproof,\u201d\nstores history, ranks past excuses, and simulates an emergency text\u2014powered by\nGoogle Gemini (via LangChain).\n\n## 1 . Setup\n```bash\ngit clone https://github.com/<yourUser>/excuse-generator.git\ncd excuse-generator\npython -m venv .venv && source .venv/bin/activate\npip install -r requirements.txt",
  "ocr_text": "\u00e9\n\nCode File Edit\n\nSelection\n\nView Go Run Terminal Window\u2019 Help\n\n6 \u20ac@oOD S wee) FaQge\n\no\nS\n\n\u00a9\n\n= List of research 5\n\n\u20ac > C\n\nGoogle Al Studio\nceo\n\n| oO EXPLORER\n\nV EXCUSE-GENERATOR\n\n> __pycache__\nv venv\n\n> bin\n\n> include\n\n> lib\n\n\u00a9 pyvenv.cfg\n .env\n\n@ excuse_api.py\n\n{} history.json\n@ README.md\n= requirements.txt\n\n=> BY & oO\n\n@\n$03 > OUTLINE\n\n> TIMELINE\n\n{ maint @ @OAS5\nView status\n\n@ Artificial Intellige CO NLP_1.ipynb - Co CO NLP_1.ipynb - Co ca LAUNCHED Glob M Launched - Artif Artificial_Intelligence\n\noO 8 oo aistue\n\nria | PyCharm Q New!\n\nPP excuse-generator By\n\nee i\n\nG.env U > &\n\n\u20ac 5\n\n@ README.md X\n\n@ excuse_api.py 5 {} history.json\n\n@ README.md > & # Intelligent Excuse Generator > &) ##1. Setup\n1 # Intelligent Excuse Generator\n2\n3  FastAPI micro-service that creates believable excuses plus a\nchat-log \u201cproof,\u201d\n4 stores history, ranks past excuses, and simulates an emergency\ntext\u2014powered by\n\nPROBLEMS @ OUTPUT DEBUG CONSOLE TERMINAL PORTS +yv 4\n\n>) zsh\n\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/uvicorn/importer.py\", line 19, in | \u2014\nimport_from_string an bJzsh\nmodule = importlib. import_module(module_str)\n\nFile \"/Users/bhuvanarora/.pyenv/versions/3.11.13/lib/python3.11/importlib/__init__.py\", line 126, in import_mo,\u00ae\ndule\nreturn _bootstrap._gcd_import(name[level:], package, level)\nFile \"<frozen importlib._bootstrap>\", line 1204, in _gcd_import\nFile \"<frozen importlib._bootstrap>\", line 1176, in _find_and_load\nFile \"<frozen importlib._bootstrap>\", line 1147, in _find_and_load_unlocked :\nFile \"<frozen importlib._bootstrap>\", line 69@, in _load_unlocked\nFile \"<frozen importlib._bootstrap_external>\", line 940, in exec_module\nFile \"<frozen importlib._bootstrap>\", line 241, in _call_with_frames_removed\nFile \"/Users/bhuvanarora/excuse-generator/excuse_api.py\", line 17, in <module>\nos.environ[\"GOOGLE_API_KEY\"] = os.getenv(\"GOOGLE_API_KEY\") # must be in .env\n\nFile \"<frozen os>\", line 684, in __setitem__\nFile \"<frozen os>\", line 758, in encode\n@ TypeError: str expected, not NoneType\n\nACINFO: Stopping reloader process [6527]\n\n(.venv) bhuvanarora@Bhuvans\u2014MacBook-Pro excuse-generator % uvicorn excuse_api:app --reload '\n\nINFO: Will watch for changes in these directories: ['/Users/bhuvanarora/excuse-generator']\n\nINFO: Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\n\nINFO: Started reloader process [6653] using StatReload\n\nINFO: Started server process [6655]\n\nINFO: Waiting for application startup.\n\nINFO: Application startup complete. dr\n\n/Users/bhuvanarora/excuse-generator/excuse_api.py:56: LangChainDeprecationWarning: The method \u201cBaseChatModel.__c\n\nall_ was deprecated in langchain-core @.1.7 and will be removed in 1.0. Use :meth:*~invoke* instead.\n\nresponse_text = 11m(messages).content.strip()\n\n/Users/bhuvanarora/excuse-generator/.venv/1lib/python3.11/site-packages/langchain_google_genai/chat_models. py: 483\n\n: UserWarning: Convert_system_message_to_human will be deprecated! '\n\nwarnings.warn(\"Convert_system_message_to_human will be deprecated!\")\n\nINFO: 127.0.@.1:65321 - \"POST /generate HTTP/1.1\" 200 OK\n\n8 Shutting down\n\nINFO: Waiting for application shutdown.\n\nINFO: Application shutdown complete.\n\nINFO: Finished server process [6655]\n\nINFO: Stopping reloader process [6653] }\n@ (.venv) bhuvanarora@Bhuvans\u2014-MacBook-Pro excuse-generator % pip freeze > requirements.txt\n@ (.venv) bhuvanarora@Bhuvans\u2014-MacBook-Pro excuse-generator % nano README.md\n\n(.venv) bhuvanarora@Bhuvans\u2014-MacBook-Pro excuse-generator % o\n\n1\nQ  Ln12,Col32 Spaces:4 UTF-8 LF {} Markdown\n\n880068820\n\n[| Al-05-BBLEN4 \u00a9 OpenAl coy API keys - Open/ [G) Gemini API refers +\u201d Get API key | G X\n\n\u2014\u2014 ce ee \u2014a \u2014 ical\n\n. . .\n\nIntelligent Excuse Generator Plan > =\nBhuvan\n\n\u201curgency\u201d. ~\u201cpanicy\u2122 7\n\nGET /top?n=5 n=count Best excuses by believability\n\nPOST /emergency { \"number\":\n\n\"message\":\n\n\"+1123456789\",\n\"Call me now!\" }\n\nSimulated SMS trigger (stub)\n\n4 . Deploy on Render (free)\n\n1. New Web Service > link this repo\n\n2. Build cmd: pip install -r requirements.txt\n\n3. Startcmd: uvicorn excuse_api:app --host 0.0.0.0 --port 10000\n4. Add env var GOOGLE_API_KEY\n\n5. Click Create \u2014 URL ready in ~2 min.\n\n\u00a9) Copy\n\n*(Replace ~<yourUser>* with your GitHub username if you wish.)*\n3. **Stage and commit the README:*x\n***bash\n\ngit add README.md\ngit commit -m \"docs: add setup & usage README\"\n\n4. Push to GitHub:\nbash O) Copy\n\ngit push |\n\n\u00a9 README.md x\n\nMessage Bhuvan\n\n+ @ &\n\n=]\n\n\u00ae"
}
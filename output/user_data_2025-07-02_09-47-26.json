{
  "timestamp": "2025-07-02_09-47-26",
  "active_window": "Electron",
  "focused_text": "Could not extract AXValue from focused element",
  "clipboard": "from dotenv import load_dotenv\nload_dotenv()          # \u2190 NEW: pulls OPENAI_API_KEY from .env",
  "vscode_text": "# excuse_api.py\nimport os, json, time, hashlib\nfrom pathlib import Path\nfrom dotenv import load_dotenv\nload_dotenv()          # \u2190 NEW: pulls OPENAI_API_KEY from .env\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\nfrom openai import OpenAI\n\n# ---------- simple \u201cDB\u201d ----------\nDATA = Path(\"history.json\")\nif not DATA.exists():\n    DATA.write_text(\"[]\")          # seed empty list\n\n# ---------- OpenAI client ----------\nclient = OpenAI(api_key=os.getenv(\"OPENAI_API_KEY\"))\n\n# ---------- FastAPI app ----------\napp = FastAPI()\n\nclass Req(BaseModel):\n    scenario: str  # e.g. \"missed class\"\n    urgency: str   # \"low\" | \"medium\" | \"panic\"\n\nSYSTEM_PROMPT = \"\"\"\nYou are an elite alibi-creator.\nReturn a JSON with:\n  excuse               (\u2264 50 words),\n  believability_score  (0-1),\n  chat_log             (short WhatsApp-style proof)\n\"\"\"\n\n# ---------- /generate ----------\n@app.post(\"/generate\")\ndef generate(r: Req):\n    prompt = f\"Scenario: {r.scenario}\\nUrgency: {r.urgency}\"\n    res = client.chat.completions.create(\n        model=\"gpt-4o-mini\",\n        messages=[\n            {\"role\": \"system\", \"content\": SYSTEM_PROMPT},\n            {\"role\": \"user\",   \"content\": prompt},\n        ],\n        temperature=0.8,\n    )\n    out = json.loads(res.choices[0].message.content)\n\n    entry = {\n        \"id\": hashlib.md5(out[\"excuse\"].encode()).hexdigest(),\n        \"ts\": time.time(),\n        **out,\n    }\n\n    history = json.loads(DATA.read_text())\n    if entry[\"id\"] not in {h[\"id\"] for h in history}:   # de-dupe\n        history.append(entry)\n        DATA.write_text(json.dumps(history, indent=2))\n\n    return entry\n\n# ---------- /top?n=5 ----------\n@app.get(\"/top\")\ndef top(n: int = 5):\n    history = json.loads(DATA.read_text())\n    history.sort(key=lambda x: x[\"believability_score\"], reverse=True)\n    return history[:n]",
  "ocr_text": "@ Code\n\nO<\u00ab 7? Co\n\ng\u00a7\n2\n\u00a9\n\nFile Edit Selection View Go Run Terminal Window Help S6\u00ae \u20ac&8 \u00a9G O S 3%8) FQ BS \u00a9 Wed Jul2 9:47AM\n= x a x co x co x ca x M x Artificial_Intelligence_Capstone_ X a] x\nO OD file:///Users/bhuvanarora/Downloads/Artificial_Intelligence_Capstone_Project.pdf.pdf Intelligent Excuse Generator Plan > b =\nBhuvan\n0e@e0@ < \u00a3 excuse-generator By Cob WwW wn wiv o \u00bb\n| EXPLORER J Welcome \u00ae excuse_api.py 4,U @ env U Dy\nVv EXCUSE-GENERATOR @ excuse_api.py > ...\nYP ~Y wenv # excuse_api.py = |\n> bin : . . . z\n\u00bb > (asi import os, json, time, hashlib = ||\n> lib from pathlib import Path\nP ? ERIS v from dotenv import load_dotenv\n\u00a9 .env U eee\n_\u2014@ excuse_api.py 4,U 5 load_dotenv() # - NEW: pulls OPENAT_API_KEY from .env\n] = requirements.txt U from fastapi import FastAPI\nA from pydantic import BaseModel\nanenal; 4 Thought for 4 seconds >\nfrom openai import OpenAI 9\nYou just pasted the Python import line into the shell, so zsh tried to execute from as a\n# ---------+-+ simple \u201cDB\u201d \u2014--------- command and complained \u2014 totally harmless.\nDATA = Path(\"history. json\")\nif not DATA.exists(): Fix in 15 seconds\nDATA.write_text(\"[]\") # seed empty list ; ; ; .\n1. Open excuse_ap1.py (it's already in the main editor tab).\n# \u2014------\u2014\u2014\u2014 OpenAI client ---------\u2014 2. Scroll to the very top (first import block) and insert:\nclient = OpenAI(api_key=os.getenv(\"OPENAI_API_KEY\") )\npython \u00a9) Copy\nPROBLEMS @ OUTPUT DEBUGCONSOLE TERMINAL PORTS. >] zsh + v i + \u201cA xX\nRequirement already satisfied: jiter<1,>=0.4.@ in ./.venv/lib/python3.11/site-packages (from openai) (0.10.0) | from dotenv import load_dotenv\nRequirement already satisfied: pydantic<3,>=1.9.@ in ./.venv/lib/python3.11/site-packages (from openai) (2.11.7) load_dotenv()\nRequirement already satisfied: sniffio in ./.venv/lib/python3.11/site-packages (from openai) (1.3.1)\nRequirement already satisfied: tqdm>4 in ./.venv/lib/python3.11/site-packages (from openai) (4.67.1)\nRequirement already satisfied: typing-extensions<5,>=4.11 in ./.venv/lib/python3.11/site-packages (from openai) (4.14.0) .\nRequirement already satisfied: idna>=2.8 in ./.venv/lib/python3.11/site-packages (from anyio<5,>=3.5.0->openai) (3.10) It should look like:\nRequirement already satisfied: certifi in ./.venv/lib/python3.11/site-packages (from httpx<1,>=0.23.0->openai) (2025.6.15)\nRequirement already satisfied: httpcore==1.* in ./.venv/lib/python3.11/site-packages (from httpx<1,>=0.23.@->openai) (1.0.9)\nRi i \u2018Lread isfied: h11>=0.16 in ./. Lib, hon3.11/site-packi f h ==1.+*->h 1,>=0.23.0\u2014 i Q.1\ni an already satisfie >: in ./.venv/lib/python /site-packages (from httpcore: *->httpx<1, >: >openai) ( python Oo Copy\nRequirement already satisfied: annotated-types>=0.6.@ in ./.venv/lib/python3.11/site-packages (from pydantic<3,>=1.9.@->openai) (0.7\na)\nRequirement already satisfied: pydantic-core==2.33.2 in ./.venv/lib/python3.11/site-packages (from pydantic<3,>=1.9.0->openai) (2.33 import os, json, time, hashlib\n2) = G\nRequirement already satisfied: typing-inspection>=0.4.@ in ./.venv/lib/python3.11/site-packages (from pydantic<3,>=1.9.@\u2014>openai) (0 from pathlib import Path |\n(@)) -4.1) from dotenv import load_dotenv\nRequirement already satisfied: starlette<0.47.0,>=0.40.@ in ./.venv/lib/python3.11/site-packages (from fastapi) (@.46.2) load dot ()\nRequirement already satisfied: click>=7.0 in ./.venv/lib/python3.11/site-packages (from uvicorn) (8.2.1) oada_aotenv\n\n> OUTLINE \u00ae (.venv) bhuvanarora@Bhuvans-MacBook-Pro excuse-generator % from dotenv import load_dotenv\n$03 zsh: command not found: from\n\n> TIMELINE (.venv) bhuvanarora@Bhuvans-MacBook-Pro excuse-generator % []\n\nUE & maine @ @0A4 Q\n\nLn5,Col63 Spaces:4 UTF-8 LF\n\n{} Python\n\n& 3.13.264-bit O\nMessage Bhuvan\n\n+ \u00ae\n\n\u00a9\n\nS800eEGE820 \u00a9O8F\u00b010 &*"
}
{
  "timestamp": "2025-07-02_10-38-57",
  "active_window": "Electron",
  "focused_text": "Could not extract AXValue from focused element",
  "clipboard": "python - <<'PY'\nimport os, dotenv, google.generativeai as genai, pathlib, sys\ndotenv.load_dotenv('.env', override=True)\n\nprint(\"SDK version  :\", genai.__version__)\nprint(\"API key prefix:\", os.getenv(\"GEMINI_KEY\")[:10] if os.getenv(\"GEMINI_KEY\") else \"MISSING\")\n\ngenai.configure(api_key=os.getenv(\"GEMINI_KEY\"))\ntry:\n    print(\"\\nModels visible to this key:\")\n    for m in genai.list_models():\n        print(\"  \u2022\", m.name)\nexcept Exception as e:\n    print(\"\\n\u26a0\ufe0f  list_models() raised:\", e.__class__.__name__, e)\n    sys.exit(1)\nPY",
  "vscode_text": "# excuse_api.py\nimport os, json, time, hashlib\nfrom pathlib import Path\nfrom dotenv import load_dotenv, find_dotenv\nload_dotenv(find_dotenv(), override=True)\n\n\n\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\n\nimport google.generativeai as genai\ngenai.configure(api_key=os.getenv(\"GEMINI_KEY\"))\nmodel = genai.GenerativeModel(\"models/gemini-pro\")\n# ---------- simple \u201cDB\u201d ----------\nDATA = Path(\"history.json\")\nif not DATA.exists():\n    DATA.write_text(\"[]\")          # seed empty list\n\n\n\n# ---------- FastAPI app ----------\napp = FastAPI()\n\nclass Req(BaseModel):\n    scenario: str  # e.g. \"missed class\"\n    urgency: str   # \"low\" | \"medium\" | \"panic\"\n\nSYSTEM_PROMPT = \"\"\"\nYou are an elite alibi-creator.\nReturn a JSON with:\n  excuse               (\u2264 50 words),\n  believability_score  (0-1),\n  chat_log             (short WhatsApp-style proof)\n\"\"\"\n\n# ---------- /generate ----------\n@app.post(\"/generate\")\ndef generate(r: Req):\n    prompt = f\"Scenario: {r.scenario}\\nUrgency: {r.urgency}\"\n    full_prompt = f\"{SYSTEM_PROMPT}\\nScenario: {r.scenario}\\nUrgency: {r.urgency}\"\n    out = json.loads(model.generate_content(full_prompt).text)\n    entry = {\n        \"id\": hashlib.md5(out[\"excuse\"].encode()).hexdigest(),\n        \"ts\": time.time(),\n        **out,\n    }\n\n    history = json.loads(DATA.read_text())\n    if entry[\"id\"] not in {h[\"id\"] for h in history}:   # de-dupe\n        history.append(entry)\n        DATA.write_text(json.dumps(history, indent=2))\n\n    return entry\n\n# ---------- /top?n=5 ----------\n@app.get(\"/top\")\ndef top(n: int = 5):\n    history = json.loads(DATA.read_text())\n    history.sort(key=lambda x: x[\"believability_score\"], reverse=True)\n    return history[:n]",
  "ocr_text": "U\nU\n@ excuse_api.py 4,U\n{} history.json U\n\nU\n\nresult = context.run(func, xargs)\n\nFile \"/Users/bhuvanarora/excuse-generator/excuse_api.py\", line 42, in generate\n\nIn the same VS-Code terminal with the venv activated:\n\n@ Code File Edit Selection View Go Run Terminal Window Help 6 \u00a38 \u00a9 GD O S wt F Q S \u00a9 Wed Jul2 10:38AM\n= List of research @ Artificial Intellige CO NLP_1.ipynb - Co CO NLP_1.ipynb - Co ca LAUNCHED Glob M Launched - Artif Artificial_Intelligence [| Al-05-BBLEN4 \u00a9 OpenAl coy API keys - Open/ [G) G\nMaccy\n. python - <<'PY'@import os, dotenv,\nO<\u00abvr Ca O 8 & aistudio.google.com/apikey Intelligent Excuse Generator Plan > google.generativeai as genai, pathlib,\nBhuvan sys@dotenv.load_dotenv(\u2018.env',\nS eee <>  excuse-generator B- bow override=True) 2 2print(\"SDK version :\", g...\no \u2018a EXPLORER >} Welcome \u00ae excuse_apipy 4,U X env U Dy a so the call is still going to the old v1beta endpoint and the backend can't Ld\nY EXCUSE-GENERATOR \u00ae excuse_api.py > \u00a9 generate find the model. Let's run one short diagnostic to see exactly what the SDK\n> hi 7 A\n\u00a9 Pp 7 nl <\u2014 37. # --------\u2014- /generate \u2014-------\u2014\u2014 and your key can see, then fix accordingly.\nwe oo 38 @app.post(\"/generate\")\n> include PROBLEMS @ OUTPUT DEBUGCONSOLE TERMINAL PORTS. +v A x\n2@ -_ t it fut | een H H \u2018\n\u00a9 GEREN) seer eA NAAAANAS en 1 Run this 15-second diagnostic\nFS & env File \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/anyio/_backends/_asyncio.py\", line 9685\n7, in run I\n\n= requirements.txt\n\n@\n> OUTLINE\naD > TIMELINE\n\nGE & maine @0A4\n\nout = json. loads (model. generate_content(full_prompt) .text)\nFile \"/Users/bhuvanarora/excuse-generator/.venv/1lib/python3.11/site-packages/google/generativeai/generative_models\u00ae\n-py\", line 331, in generate_content\nresponse = self._client.generate_content(\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/google/ai/generat ive language_: WALSH EYS|\nervices/generative_service/client.py\", line 835, in generate_content\nresponse = rpc(\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/google/api_core/gapic_v1/method. py\",\nline 131, in __call__\nreturn wrapped_func(*args, *kkwargs)\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/google/api_core/retry/retry_unary.py\"\n, line 294, in retry_wrapped_func\nreturn retry_target( bE\nAAAARAAAAAAAA F\nFile \"/Users/bhuvanarora/excuse-generator/.venv/1lib/python3.11/site-packages/google/api_core/retry/retry_unary.py\"\n, line 156, in retry_target\nnext_sleep = _retry_error_helper(\nFile \"/Users/bhuvanarora/excuse-generator/.venv/1lib/python3.11/site-packages/google/api_core/retry/retry_base.py\",\nline 214, in _retry_error_helper 1.\nraise final_exc from source_exc\nFile \"/Users/bhuvanarora/excuse-generator/.venv/1lib/python3.11/site-packages/google/api_core/retry/retry_unary.py\"\n, line 147, in retry_target\nresult = target() 1\nFile \"/Users/bhuvanarora/excuse-generator/.venv/1lib/python3.11/site-packages/google/api_core/timeout.py\", line 130\n, in func_with_timeout\nreturn func(*args, +kkwargs)\n\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/google/api_core/grpc_helpers.py\", lin ,\ne 78, in error_remapped_callable af\nraise exceptions. from_grpc_error(exc) from exc\ngoogle.api_core.exceptions.NotFound: 404 models/gemini-pro is not found for API version vibeta, or is not supported\nfor generateContent. Call ListModels to see the list of available models and their supported methods. '\n\nACINFO: Shutting down\n\nINFO: Waiting for application shutdown.\nINFO: Application shutdown complete.\nINFO: Finished server process [99207]\nINFO: Stopping reloader process [99204]\n\n(.venv) bhuvanarora@Bhuvans\u2014-MacBook-Pro excuse-generator % | |\n\nUTF-8 LF\n\nQ  n42,Col63 Space: {} thon\n\nIko to MTJ (1).pdf\n\nAIEUTIR EAI EY\n\nfile.pdf\n\nITRV (1).pdf ITRV.pdf Iko to mtj\n\nS80\u00b0G8880 eee 7a\n\n8 3.13.2 64- ia 6 iis\n\nIko to MTJ-\\-\n\nbash Y Copied\n\npython \u2014- <<'PyY'\nimport os, dotenv, google.generativeai as genai, pathlib,\ndotenv.load_dotenv('.env', override=True)\n\nsys\n\nprint(\"SDK version :\", genai.__version__)\nprint(\"API key prefix:\", os.getenv(\"GEMINI_KEY\")[:10] if os.getenv(\"GEMIN\n\ngenai.configure(api_key=os.getenv(\"GEMINI_KEY\") )\ntry:\nprint(\"\\nModels visible to this key:\")\nfor m in genai.list_models():\nprint(\" e\", m.name)\nexcept Exception as e:\n\nprint(\"\\n4&\u00a5 list_models() raised:\", e.__class__.__name__, e)\n\nsys.exit(1)\nPY\nInterpret the output\nWhat you see Meaning Ne 8\nVv\nSDK version : @.8.x and you see your key has access and the SDK is new. 1. K\n\n\u00a9 excuse_api.py x\n\nMessage Bhuvan\n\nCD\nWw\n\n=]\n\nae"
}
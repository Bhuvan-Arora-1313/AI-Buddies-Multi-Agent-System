{
  "timestamp": "2025-07-02_11-15-35",
  "active_window": "Electron",
  "focused_text": "Could not extract AXValue from focused element",
  "clipboard": "# Intelligent Excuse Generator\n\nFastAPI micro-service that creates believable excuses plus a chat-log \u201cproof,\u201d\nstores history, ranks past excuses, and simulates an emergency text\u2014powered by\nGoogle Gemini (via LangChain).\n\n## 1 . Setup\n```bash\ngit clone https://github.com/<yourUser>/excuse-generator.git\ncd excuse-generator\npython -m venv .venv && source .venv/bin/activate\npip install -r requirements.txt",
  "vscode_text": "# Intelligent Excuse Generator\n\nFastAPI micro-service that creates believable excuses plus a chat-log \u201cproof,\u201d\nstores history, ranks past excuses, and simulates an emergency text\u2014powered by\nGoogle Gemini (via LangChain).\n\n## 1 . Setup\n```bash\ngit clone https://github.com/<yourUser>/excuse-generator.git\ncd excuse-generator\npython -m venv .venv && source .venv/bin/activate\npip install -r requirements.txt",
  "ocr_text": "Code File Edit Selection View Go Run Terminal Window\u2019 Help 3 5%h) FSF Q & Wed Jul 2 11:15AM\n+\n\n= List of research f @ Artificial Intellige CO NLP_1.ipynb - Co CO NLP_1.ipynb - Co ca LAUNCHED Glob M Launched - Artif Artificial_Intelligence [| Al-05-BBLEN4 \u00a9 Openal coy API keys - Open/ (S) Gemini API refere +\u201d Get API key | GX\nO-<cerX Ce O & = aistue\u2014\u2014\u2014t\u2014 Intelligent Excuse Generator Plan > - =\nBhuvan\no Google Al Studio el PyCharm Q Search projects New! Deployment & docs Not required for code completeness\u2014you can add Bo\nra) 93 09\nee@ <-> PP excuse-generator By Row later if time.\n| oO EXPLORER 90 @ excuse_api.py5 X  {} history.json @ README.md & .env u Dy\n\\ EXCUSE-GENERATOR \u00ae excuse_api.py > @ generate So only one functional gap: an emergency endpoint that simulates an alert.\n{> \u2014pycache_ 49 def generate(r: Req):\nv venv - 5 yA\n> ot 58 if response_text.startswith(\" \"\n\u2018op > include 59 response_text = response_text.strip(\"*\").lstrip(\"json\").str Finish th . f de edi\n. \u2018 inish the project in two tiny code edits\n| 2b 60 out = json. loads(response_text) proj y\n& \u00a9 pyvenv.cfg a\n& env 61 entry = {| . 1. Open excuse_api.py in VS Code.\nmM Oaamcig 6 62 \"id\": hashlib.md5(out[\"excuse\"].encode()).hexdigest(),\n() history,json PROBLEMS @ OUTPUT DEBUG CONSOLE TERMINAL PORTS yom & 2. Add this block right after the other routes:\nJX @ README.md \u2014\u2014 |\n= requirements.txt File \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/uvicorn/importer.py\", line 19, in BS gs\nimport_from_string an bJzsh python (a) Copy\nmodule = importlib. import_module(module_str)\n4 file \"/Users/bhuvanarora/.pyenv/versions/3.11.13/1Lib/python3.11/importlib/__init__.py\", line 126, in import_mo,\u00ae from pydantic import BaseModel\nule\nreturn _bootstrap._gcd_import(name[level:], package, level)\nARARAAAAAARARAAAAAARARARAARARARARAARAABARABRARAABRABABS, cla S| S EmergencyRequest ( Ba seModel \u00bb) :\nFile \"<frozen importlib._bootstrap>\", line 1204, in _gcd_import b .\nFile \"<frozen importlib._bootstrap>\", line 1176, in _find_and_load number: str\nFile \"<frozen importlib._bootstrap>\", line 1147, in _find_and_load_unlocked Ly message: str\nFile \"<frozen importlib._bootstrap>\", line 69@, in _load_unlocked\nFile \"<frozen importlib._bootstrap_external>\", line 940, in exec_module\nFile \"<frozen importlib._bootstrap>\", line 241, in _call_with_frames_removed @app. post( \"/emergency\" )\nFile \"/Users/bhuvanarora/excuse-generator/excuse_api.py\", line 17, in <module> . .\nos.environ[\"GOOGLE_API_KEY\"] = os.getenv(\"GOOGLE_API_KEY\") # must be in .env def emergency(req: EmergencyRequest):\nARARAAAAAARARAAAAAL now\nFile \"<f \", Line 684, i tit : :\nFile \u201ccfrosen ose\", Line 758. in encode 7 Simulate sending an emergency SMS/call.\n\u00a9 TypeError: str expected, not NoneType (In a real system you'd integrate Twilio; here we just log it.)\n\u201cCINFO: Stopping reloader process [6527] nou\n(.venv) bhuvanarora@Bhuvans-MacBook-Pro excuse-generator % uvicorn excuse_api:app --reload '\nINFO: Will watch for changes in these directories: ['/Users/bhuvanarora/excuse-generator']\nINFO: Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit) t = \u00a5\nINFO: Started reloader process [6653] using StatReload entry =\nae pera SIRI See eee \"id\": f\"emergency-{int(time.time())}\",\nB jaiting for application startup. . - .\nINFO: Application startup complete. r dr \"ts\": time.time() '\nRULE ESBS IS SESE EA CSD Re ae Ue eae jpaseChatModel.__c \"excuse\": \"EMERGENCY TRIGGER\",\nall_\u201d was deprecated in langchain-core 0.1.7 and wi @ removed in 1.@. Use :meth:*~invoke\u2019 instead. . oe .\nresponse_text = 1lm(messages).content.strip() ; ; ; \"believability_score\" : 1.0,\n/Users/bhuvanarora/excuse-generator/.venv/1ib/python3.11/site\u2014packages/langchain_google_genai/chat_models.py:483 \"chat_log \"s f\"Sent '! {req . message} ' to {req .~number}\"\n: UserWarning: Convert_system_message_to_human will be deprecated! ' }\nwarnings.warn(\"Convert_system_message_to_human will be deprecated!\") |\nINFO: 127.0.0.1:65321 - \"POST /generate HTTP/1.1\" 200 0K hist = json.loads(DATA.read_te V ))\nACINFO: Shutting down ( Wet ermal (@nEETeW) -\nINFO: Waiting for application shutdown. 1 -app y\n@ INFO: Application shutdown complete.\nINFO: Finished server process [6655]\nINFO: Stopping reloader process [6653] }\n> OUTLINE @ (.venv) bhuvanarora@Bhuvans\u2014-MacBook-Pro excuse-generator % pip freeze > requirements.txt Message Bhuvan\n$03 @ (.venv) bhuvanarora@Bhuvans\u2014-MacBook-Pro excuse-generator % nano README.md h\n> TIMELINE (.venv) bhuvanarora@Bhuvans-MacBook-Pro excuse-generator % [] F ofl \u00ae co )\n| maint @\u00ae @O0AS5 Q  Ln61,Col14 Spaces:4 UTF-8 LF {} Python & 3.13.264-bit O Ww Y\nView status | : j\n\u2018cna =a\n\n.\n\n. . ."
}
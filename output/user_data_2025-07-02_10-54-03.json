{
  "timestamp": "2025-07-02_10-54-03",
  "active_window": "Electron",
  "focused_text": "Could not extract AXValue from focused element",
  "clipboard": "curl -X POST http://127.0.0.1:8000/generate \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\"scenario\":\"missed class\",\"urgency\":\"panic\"}'",
  "vscode_text": "# excuse_api.py\nimport os, json, time, hashlib\nfrom pathlib import Path\nfrom dotenv import load_dotenv, find_dotenv\nload_dotenv(find_dotenv(), override=True)\n\n\n\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\n\nimport google.generativeai as genai\ngenai.configure(api_key=os.getenv(\"GEMINI_KEY\"))\nmodel = genai.GenerativeModel(\"models/gemini-pro\")\n#print(\">>> model being used:\", model._name) \n# ---------- simple \u201cDB\u201d ----------\nDATA = Path(\"history.json\")\nif not DATA.exists():\n    DATA.write_text(\"[]\")          # seed empty list\n\n\n\n# ---------- FastAPI app ----------\napp = FastAPI()\n\nclass Req(BaseModel):\n    scenario: str  # e.g. \"missed class\"\n    urgency: str   # \"low\" | \"medium\" | \"panic\"\n\nSYSTEM_PROMPT = \"\"\"\nYou are an elite alibi-creator.\nReturn a JSON with:\n  excuse               (\u2264 50 words),\n  believability_score  (0-1),\n  chat_log             (short WhatsApp-style proof)\n\"\"\"\n\n# ---------- /generate ----------\n@app.post(\"/generate\")\ndef generate(r: Req):\n    prompt = f\"Scenario: {r.scenario}\\nUrgency: {r.urgency}\"\n    full_prompt = f\"{SYSTEM_PROMPT}\\nScenario: {r.scenario}\\nUrgency: {r.urgency}\"\n    out = json.loads(model.generate_content([full_prompt]).text)\n    entry = {\n        \"id\": hashlib.md5(out[\"excuse\"].encode()).hexdigest(),\n        \"ts\": time.time(),\n        **out,\n    }\n\n    history = json.loads(DATA.read_text())\n    if entry[\"id\"] not in {h[\"id\"] for h in history}:   # de-dupe\n        history.append(entry)\n        DATA.write_text(json.dumps(history, indent=2))\n\n    return entry\n\n# ---------- /top?n=5 ----------\n@app.get(\"/top\")\ndef top(n: int = 5):\n    history = json.loads(DATA.read_text())\n    history.sort(key=lambda x: x[\"believability_score\"], reverse=True)\n    return history[:n]",
  "ocr_text": "@ Code File Edit Selection View Go Run\u2019 Terminal Window Help 6 8 \u00a9 DW S 32%%) F Q SBS @ Wed Jul2 10:54AM\n= List of research f @ Artificial Intellige CO NLP_1.ipynb - Co CO NLP_1.ipynb - Co ca LAUNCHED Glob M Launched - Artif Artificial_Intelligence [| Al-05-BBLEN4 \u00a9 Openal coy API keys - Open/ (S) Gemini API refere +\u201d Get API key | GX\nO<\u00a2\u00ab vr coe O @& = aistudio.google.com/apikey Intelligent Excuse Generator Plan > =\nBhuvan\n\u00a9 . Looked at Code\nGoogle Al Studio 3)\n@.\n= @ 1 file changed Review  & Revert\n\u00a9 ee@ <> PP excuse-generator By Cob WwW\na oO EXPLORER J Welcome \u00ae excuse_api.py 4,U X % .env U Py vee =] excuse_api.py +0 \u20140 [oy\nee\nV EXCUSE-GENERATOR \u00ae excuse_api.py > \u00a9 generate \u00bboked at Code\n{> \u2014Pycache_ 4@ def generate(r: Req): =) | .\nih Us: avon 7 . . n \"e adjusted the /generate route so it now calls\n5 bin 41 prompt = f\"Scenario: {r.scenario}\\nUrgency: {r.urgency} -\n=e > Include 42 full_prompt = f\"{SYSTEM_PROMPT}\\nScenario: {r.scenario}\\nUrgency: python & Copy\n| 2b 43 out = json. loads(model.generate_content( [full_prompt] ).text) |\n& \u00a9 pyvenv.cfg U .\n& env 44 entry = { out = json.loads(model.generate_content([full_prompt]).text)\nFS \u00a9 @ excuse epipy 4,U 45 \"id\": hashlib.md5(out[\"excuse\"].encode()).hexdigest(),\n) tse PROBLEMS @ OUTPUT DEBUGCONSOLE TERMINAL PORTS. tv a x singa list as required by the v1 beta API).\nA = requirements.txt U \u2014\n_ . >.) python3.11 a\nresponse = rpc( slacin a Save is already done.\nt ce\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/google/api_core/gapic_v1/method. py\",\nline 131, in __call__ 7 H Q\nreturn wrapped_func(xargs, **kwargs) L Restart Uvicorn:\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/google/api_core/retry/retry_unary.py\"s\n, line 294, in retry_wrapped_func bash oO Copy\nreturn retry_target( i.\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/google/api_core/retry/retry_unary.py\"\n, line 156, in retry_target 1: Ctrl-C\nnext_sleep = _retry_error_helper( \u2018| uvicorn excuse_api:app --reload\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/google/api_core/retry/retry_base.py\",\nline 214, in _retry_error_helper\nraise final_exc from source_exc Test:\nFile \"/Users/bhuvanarora/excuse-generator/.venv/1lib/python3.11/site-packages/google/api_core/retry/retry_unary.py\"\u00a7\n, line 147, in retry_target 1\nresult = target () bash \u00a9) Copy\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/google/api_core/timeout.py\", line 130\n, in func_with_timeout\nFEN TUES) ek eLyS)) curl \u2014X POST http://127.0.0.1:8000/generate \\\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/google/api_core/grpc_helpers.py\", lin -H \"Content-Type: application/json\" \\\ne 78, in error_remapped_callable -d '{\"scenario\":\"missed class\", \"urgency\":\"panic\"}'\nraise exceptions. from_grpc_error(exc) from exc . u .\ngoogle.api_core.exceptions.NotFound: 404 models/gemini-pro is not found for API version vibeta, or is not supported\nfor generateContent. Call ListModels to see the list of available models and their supported methods.\n@ (.venv) bhuvanarora@Bhuvans\u2014-MacBook-Pro excuse-generator % curl -X POST http://127.0.0.1:8000/generate \\ yu should now get a JSON excuse.\n-H \u201cContent-Type: application/j on\" \\ . Vv\nIntermal pSConS Ol 2 fissediiclass sr jUrgencyssipanicay any new error appears, let me know\u2014but thi. ~ -t-call is the last piece the v1 beta endpoint\n@ (.venv) bhuvanarora@Bhuvans\u2014-MacBook-Pro excuse-generator % curl -X POST http://127.0.0.1:8000/generate \\\n-H \"Content-Type: application/json\" \\\n-d '{\"scenario\":\"missed class\",\"urgency\":\"panic\"}' fi x\n(@)) Internal Server Errorg 1 pean FT\n@ (.venv) bhuvanarora@Bhuvans\u2014-MacBook-Pro excuse-generator % curl -X POST http://127.0.0.1:8000/generate \\\n-H \"Content-Type: application/json\" \\ ) assage Bhuvan\n> OUTLINE -d '{\"scenario issed class\",\"urgency\":\"panic\"}' f if\n$03 Internal Server Errorg\n> TIMELINE (.venv) bhuvanarora@Bhuvans-MacBook-Pro excuse-generator % [] 1 \u00ae \u2018 Q st)\n. main* @ @o0A4 Ln 43, Col36 Spaces:4 UTF-8 LF {} Python 3.13.2 64-bit O .\nView stat Ol _ : \u2014 = E yinon B81\n\n880686"
}
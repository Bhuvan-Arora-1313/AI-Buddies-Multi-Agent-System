{
  "timestamp": "2025-07-02_10-28-57",
  "active_window": "ChatGPT",
  "focused_text": "Could not extract AXValue from focused element",
  "clipboard": "curl -X POST http://127.0.0.1:8000/generate \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\"scenario\":\"missed class\",\"urgency\":\"panic\"}'",
  "vscode_text": "# excuse_api.py\nimport os, json, time, hashlib\nfrom pathlib import Path\nfrom dotenv import load_dotenv, find_dotenv\nload_dotenv(find_dotenv(), override=True)\n\n\n\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\n\nimport google.generativeai as genai\ngenai.configure(api_key=os.getenv(\"GEMINI_KEY\"))\nmodel = genai.GenerativeModel(\"gemini-pro\")\n# ---------- simple \u201cDB\u201d ----------\nDATA = Path(\"history.json\")\nif not DATA.exists():\n    DATA.write_text(\"[]\")          # seed empty list\n\n\n\n# ---------- FastAPI app ----------\napp = FastAPI()\n\nclass Req(BaseModel):\n    scenario: str  # e.g. \"missed class\"\n    urgency: str   # \"low\" | \"medium\" | \"panic\"\n\nSYSTEM_PROMPT = \"\"\"\nYou are an elite alibi-creator.\nReturn a JSON with:\n  excuse               (\u2264 50 words),\n  believability_score  (0-1),\n  chat_log             (short WhatsApp-style proof)\n\"\"\"\n\n# ---------- /generate ----------\n@app.post(\"/generate\")\ndef generate(r: Req):\n    prompt = f\"Scenario: {r.scenario}\\nUrgency: {r.urgency}\"\n    full_prompt = f\"{SYSTEM_PROMPT}\\n{prompt}\"\n    out = json.loads(model.generate_content(full_prompt).text)\n    entry = {\n        \"id\": hashlib.md5(out[\"excuse\"].encode()).hexdigest(),\n        \"ts\": time.time(),\n        **out,\n    }\n\n    history = json.loads(DATA.read_text())\n    if entry[\"id\"] not in {h[\"id\"] for h in history}:   # de-dupe\n        history.append(entry)\n        DATA.write_text(json.dumps(history, indent=2))\n\n    return entry\n\n# ---------- /top?n=5 ----------\n@app.get(\"/top\")\ndef top(n: int = 5):\n    history = json.loads(DATA.read_text())\n    history.sort(key=lambda x: x[\"believability_score\"], reverse=True)\n    return history[:n]",
  "ocr_text": "6\n\no\nS\n\n\u00a9\n\nChatGPT File Edit View\n= List of research\nSerena\nEXPLORER\n\n| \\Y EXCUSE-GENERATOR\n\nP > __pycache__\nVv wenv\n\n> bin\nae\n\n> include\n> lib\n\u00a9 pyvenv.cfg U\n\u00a9 .env U\nES @ excuse_api.py 4,U\nU\nU\n\n{} history.json\nA = requirements.txt\n\n@\n> OUTLINE\na > TIMELINE\n\nGE & maine @0A4\n\nWindow\n\nHelp\n\n* Artificial Intellige CO NLP_1.ipynb - Co CO NLP_1.ipynb - Cc ca LAUNCHED Glok M Launched - Artif Artificial_Intelligence\n\nO 8 =\n\n\u20ac 5\n\naistudio.google.com/apikey\n\nBOAT\nDy %\n\nP excuse-generator\n\nJ Welcome\n\n@ excuse_api.py 4,U X % .env U\n\n@ excuse_api.py > ...\n\n1 # excuse_api.py\nimport os, json, time, hashlib\n\nfrom pathlib import Path\n\nfrom dotenv import load_dotenv, find_dotenv\nload_dotenv(find_dotenv(), override=True)\n\nok WN\n\n6\n\nPROBLEMS @ OUTPUT DEBUG CONSOLE PORTS.\n\n+yv ee a. xX\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/anyio/_backends/_asyncio.py\", line 96\" >.) python3.11\n\n7, in run aa\nresult = context.run(func, xargs)\n\nTERMINAL\n\n>-| zsh\n\nFile \"/Users/bhuvanarora/excuse-generator/excuse_api.py\", line 42, in generate\nout = json. loads (model. generate_content(full_prompt) .text)\nt\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/google/generativeai/generative_models\n-py\", line 331, in generate_content\nresponse = self._client.generate_content(\nFile \"/Users/bhuvanarora/excuse-generator/. venv/1ib/python3. 11/site-packages/google/ai/generativelanguage_' vibeta/s .\nervices/generative_service/client.py\", line 835, in generate_content\nresponse = rpc(\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/google/api_core/gapic_v1/method. py\",\nline 131, in __call__\nreturn wrapped_func(xargs, **kwargs) i\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/google/api_core/retry/retry_unary.py\"\n, line 294, in retry_wrapped_func\nreturn retry_target(\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/google/api_core/retry/retry_unary.py\" =\n, line 156, in retry_target\nnext_sleep = _retry_error_helper(\nFile \"/Users/bhuvanarora/excuse-generator/.venv/1ib/python3.11/site-packages/google/api_core/retry/retry_base. py\",\nline 214, in _retry_error_helper '\nraise final_exc from source_exc\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/google/api_core/retry/retry_unary.py\"\n, line 147, in retry_target\nresult = target()\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/google/api_core/timeout.py\", line 130\u00a7\n, in func_with_timeout\nreturn func(*args, +kkwargs)\nAAAAAAAAAAAAAAAAAAAAA F\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/google/api_core/grpc_helpers.py\", lin\ne 78, in error_remapped_callable\nraise exceptions. from_grpc_error(exc) from exc\ngoogle.api_core.exceptions.NotFound: 404 models/gemini-pro is not found for API version vibeta, or is not supported\nfor generateContent. Call ListModels to see the list of available models and their supported methods\n\nLn7,Col1 Spaces:4 UTF-8 LF {} Python @&3 3.13.264-bit (3\nfile.pdf ITRV (1).pdf ITRV.pdf AIEUTIR EAI EY Iko to mtj Iko to MTJ (1).pdf Iko to MTJ-\\=\n\n2%0) FQ BS\n\nG@ROTO8\n\nOB) al-05-BBLEN4 \u00a9 Openal @ appikeys- Open\u2019 \u00a9 Gemini aPirefere: | 9 Get API key | G X\n\nIntelligent Excuse Generator Plan >\nBhuvan\n\neco MO @G\n\ninternal saeerever error\n\nThought for 6 seconds\n\nThe stack-trace still says \u201cAPI version vibeta\u201d > you're running an old Google Generative Al\nSDK.\n\nWith that version you must call \"models/gemini-pro\", but the easier fix is to upgrade to\nthe current v1 SDK and use plain \"gemini-pro\".\n\n1 Upgrade the SDK for real (wipe the cache)\n\nbash O) Copy\nsource .venv/bin/activate\npip uninstall -y google-generativeai\npip install --no-cache-dir --upgrade google-generativeai\nVerify:\nbash O) Copy\n\npip show google-generativeai | gre |\u2018ersion\n\n\u20ac Work with Code Tab x\n\nMessage Bhuvan\n\n+ @\u00ae ov\n\n980\u00b0G8820 \u00a9982\u00b00 Ef\n\n=]\n\n@ Wed Jul 2 10:28AM"
}
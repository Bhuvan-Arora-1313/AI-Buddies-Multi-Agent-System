{
  "timestamp": "2025-07-02_10-47-17",
  "active_window": "Electron",
  "focused_text": "Could not extract AXValue from focused element",
  "clipboard": "uvicorn excuse_api:app --reload",
  "vscode_text": "# excuse_api.py\nimport os, json, time, hashlib\nfrom pathlib import Path\nfrom dotenv import load_dotenv, find_dotenv\nload_dotenv(find_dotenv(), override=True)\n\n\n\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\n\nimport google.generativeai as genai\ngenai.configure(api_key=os.getenv(\"GEMINI_KEY\"))\nmodel = genai.GenerativeModel(\"gemini-pro\")\nprint(\">>> model being used:\", model._name) \n# ---------- simple \u201cDB\u201d ----------\nDATA = Path(\"history.json\")\nif not DATA.exists():\n    DATA.write_text(\"[]\")          # seed empty list\n\n\n\n# ---------- FastAPI app ----------\napp = FastAPI()\n\nclass Req(BaseModel):\n    scenario: str  # e.g. \"missed class\"\n    urgency: str   # \"low\" | \"medium\" | \"panic\"\n\nSYSTEM_PROMPT = \"\"\"\nYou are an elite alibi-creator.\nReturn a JSON with:\n  excuse               (\u2264 50 words),\n  believability_score  (0-1),\n  chat_log             (short WhatsApp-style proof)\n\"\"\"\n\n# ---------- /generate ----------\n@app.post(\"/generate\")\ndef generate(r: Req):\n    prompt = f\"Scenario: {r.scenario}\\nUrgency: {r.urgency}\"\n    full_prompt = f\"{SYSTEM_PROMPT}\\nScenario: {r.scenario}\\nUrgency: {r.urgency}\"\n    out = json.loads(model.generate_content(full_prompt).text)\n    entry = {\n        \"id\": hashlib.md5(out[\"excuse\"].encode()).hexdigest(),\n        \"ts\": time.time(),\n        **out,\n    }\n\n    history = json.loads(DATA.read_text())\n    if entry[\"id\"] not in {h[\"id\"] for h in history}:   # de-dupe\n        history.append(entry)\n        DATA.write_text(json.dumps(history, indent=2))\n\n    return entry\n\n# ---------- /top?n=5 ----------\n@app.get(\"/top\")\ndef top(n: int = 5):\n    history = json.loads(DATA.read_text())\n    history.sort(key=lambda x: x[\"believability_score\"], reverse=True)\n    return history[:n]",
  "ocr_text": "Code File Edit Selection View Go Run Terminal Window\u2019 Help 6 8 \u00a9 DGD S 2%%) FF Q S O@ Wed Jul2 10:47AM\n\nOw \u00ae 0\n\n= List of research @ Artificial Intellige CO NLP_1.ipynb - Co CO NLP_1.ipynb - Co ca LAUNCHED Glob M Launched - Artif Artificial_Intelligence [| Al-05-BBLEN4 \u00a9 Openal coy API keys - Open/ [G) Gemini API refers +\u201d Get API key | G X\n4 B q 5 6 \u2014\n\u20ac > C a O 6 = aistudio.google.com/apikey Intelligent Excuse Generator Plan > y=\nBhuvan\n\nGoogle Al Studio ii 8\n\nmodels/gemini-pro, which that old endpoint can't serve.\nee0e <> P excuse-generator B- bw ith the new SDK (0.8.5) you should pass the plain model ID (\"\"gemini-pro\") when you build\na oO EXPLORER + J Welcome \u00ae excuse_api.py 4,U X env U Dy -- @model object \u2014not the full \u201cmodels/...\" path.\n\nVv EXCUSE-GENERATOR @ excuse_api.py > ...\n\n> __pycache__ 7\nih Usi Je)\n\nVV venv\n8\n\n> bin . li 7\nCh oe > include 9 from fastapi import FastAPI uick 2-line fix\n\n00\n\n> lib\nL& & pyvenv.cfg U PROBLEMS @ OUTPUT DEBUG CONSOLE ERIN PORTS. +v we AX python oO Copy\n\n>.) python3.11\n\nFe & .env U # stop any uvicorn still running |\n\u00ae excuse_api. 4,U Ctri-c 2) zsh i i i i\n. 7 Eby pkill -f \u201cuvicorn.*excuse_api\" 2>/dev/null # just in case import google.generativeai as genal\n{} history.json U genai.configure(api_key=os.getenv(\"GEMINI_KEY\") )\n= i ts.txt U source .venv/bin/activate # activate venv => ; 1 \" inji- \"\nA requirements.tx nian GUM Age) Cot model genai.GenerativeModel(\"gemini-pro\" )\nACINFO: Stopping reloader process [2760]\n\u00ae (.venv) bhuvanarora@Bhuvans\u2014MacBook-Pro excuse-generator % pkill -f \u201cuvicorn.*xexcuse_api\" 2>/dev/null\n@ (.venv) bhuvanarora@Bhuvans\u2014-MacBook-Pro excuse-generator % source .venv/bin/activate 1 A * A *\n(.venv) bhuvanarora@Bhuvans\u2014MacBook-Pro excuse-generator % uvicorn excuse_api:app --reload fake sure there\u2019s only one import / configure / model block in the file.)\nINFO: Will watch for changes in these directories: ['/Users/bhuvanarora/excuse-generator']\nINFO: Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO: Started reloader process [3663] using StatReload\nProcess SpawnProcess-1:\nTraceback (most recent call last):\nFile \"/Users/bhuvanarora/.pyenv/versions/3.11.13/lib/python3.11/multiprocessing/process.py\", line 314, in Pane] hen restart everything cleanly\n\nap\nself.run()\nFile \"/Users/bhuvanarora/.pyenv/versions/3.11.13/lib/python3.11/multiprocessing/process.py\", line 108, in run\nself._target(*self._args, *kself._kwargs) bash oO Copy\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/uvicorn/_subprocess.py\", line 80, in\nsubprocess_started\ntarget (sockets=sockets)\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/uvicorn/server.py\", line 67, in run\nreturn asyncio. run(self.serve(sockets=sockets) ) Ctr1-C\nFile \"/Users/bhuvanarora/.pyenv/versions/3.11.13/lib/python3.11/asyncio/runners.py\", line 190, in run pkill -f \"uvicorn.*excuse_api\" 2>/dev/null\nreturn runner. run(main)\n\nFile \"/Users/bhuvanarora/.pyenv/versions/3.11.13/lib/python3.11/asyncio/runners.py\", line 118, in run source .venv/bin/activate\nTSE SON ee re er) uvicorn excuse_api:app --reload\nFile \"/Users/bhuvanarora/.pyenv/versions/3.11.13/lib/python3.11/asyncio/base_events.py\", line 654, in run_until_co\nmplete\n\ne .\nreturn future. result () yu should now see the temporary line we added:\n\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/uvicorn/server.py\", line 71, in serve |\nawait self._serve(sockets)\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/uvicorn/server.py\", line 78, in _serv v O Copy\ne\nconfig. load()\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/uvicorn/config.py\", line 436, in load\nself. loaded_app = import_from_string(self.app) excuse_api.py <\n\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/uvicorn/importer.py\", line 19, in imp\n\nort_from_string A\ns > OUTLINE module = importlib. import_module(module_str) 2ssage Bhuvan\n\n> TIMELINE File \"/Users/bhuvanarora/.pyenv/versions/3.11.13/lib/python3.11/importlib/__init__.py\", line 126, in import_module \u00ae\nGs % main* \u00ae@ @oA4 Q 1n14,Col32 Spaces:4 UTF-8 LF {} Python @ 3.13.264-bit Q\nus =\n\n=]\n\nCD\nWw\n\nView stat"
}
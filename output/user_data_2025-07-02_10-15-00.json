{
  "timestamp": "2025-07-02_10-15-00",
  "active_window": "ChatGPT",
  "focused_text": "i am so sorry i maen i want to continue with vs code",
  "clipboard": "curl -X POST http://127.0.0.1:8000/generate \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\"scenario\":\"missed class\", \"urgency\":\"panic\"}'",
  "vscode_text": "# excuse_api.py\nimport os, json, time, hashlib\nfrom pathlib import Path\nfrom dotenv import load_dotenv\nload_dotenv()          # \u2190 NEW: pulls OPENAI_API_KEY from .env\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\nfrom openai import OpenAI\n# ---------- OpenAI client ----------\nclient = OpenAI(api_key=os.getenv(\"OPENAI_API_KEY\"))\n\n# ---------- simple \u201cDB\u201d ----------\nDATA = Path(\"history.json\")\nif not DATA.exists():\n    DATA.write_text(\"[]\")          # seed empty list\n\n\n\n# ---------- FastAPI app ----------\napp = FastAPI()\n\nclass Req(BaseModel):\n    scenario: str  # e.g. \"missed class\"\n    urgency: str   # \"low\" | \"medium\" | \"panic\"\n\nSYSTEM_PROMPT = \"\"\"\nYou are an elite alibi-creator.\nReturn a JSON with:\n  excuse               (\u2264 50 words),\n  believability_score  (0-1),\n  chat_log             (short WhatsApp-style proof)\n\"\"\"\n\n# ---------- /generate ----------\n@app.post(\"/generate\")\ndef generate(r: Req):\n    prompt = f\"Scenario: {r.scenario}\\nUrgency: {r.urgency}\"\n    res = client.chat.completions.create(\n        model=\"gpt-4o-mini\",\n        messages=[\n            {\"role\": \"system\", \"content\": SYSTEM_PROMPT},\n            {\"role\": \"user\",   \"content\": prompt},\n        ],\n        temperature=0.8,\n    )\n    out = json.loads(res.choices[0].message.content)\n\n    entry = {\n        \"id\": hashlib.md5(out[\"excuse\"].encode()).hexdigest(),\n        \"ts\": time.time(),\n        **out,\n    }\n\n    history = json.loads(DATA.read_text())\n    if entry[\"id\"] not in {h[\"id\"] for h in history}:   # de-dupe\n        history.append(entry)\n        DATA.write_text(json.dumps(history, indent=2))\n\n    return entry\n\n# ---------- /top?n=5 ----------\n@app.get(\"/top\")\ndef top(n: int = 5):\n    history = json.loads(DATA.read_text())\n    history.sort(key=lambda x: x[\"believability_score\"], reverse=True)\n    return history[:n]",
  "ocr_text": "Ow \u00ae 0\n\nChatGPT File Edit View Window\u2019 Help 6 \u20ac8 \u00a9GD O 8S wD F Q S \u00a9 Wed Jul2 10:15AM\n= x x Oo x Oo x x M x x x 6 x  @ Apikeys - OpenAl Al X\n\u20ac<\u20ac 7 CQ \u00a9 @G = platform.openai.com/settings/organization/api-keys eee OG Intelligent Excuse Generator Plan > CS y=\nBhuvan\n<\u20ac P\u00a3 excuse-generator 8 Y 08 Oo ba a\nSEEN + Supplemental R&D: keep one or two Colab notebooks for ad-hoc experiments.\n| oO EXPLORER J Welcome \u00ae excuse_api.py 4,U X %.env U Py YO -\nVv EXCUSE-GENERATOR @ excuse_api.py > ...\nPp > _pycache_ 1 # excuse_api.py = That gives you the best of both worlds and keeps your capstone demo rock-solid.\n\\ env . \u2014 q q ios\n\u00bb 5 om 2 import os, json, time, hashlib Am 6 @\n2 inelude =) el Ppt\u00bb . Mise: revel ok so iam continuing wiht colab so where were we ya we\n| 2b 4 from dotenv import load_dotenv . . \u2014_ .\n& & pyvenv.cfg uU we were trying to start with genini instead of openai\n@) cam u 5  load_dotenv() # \u00ab NEW: pulls OPENAI_API_KEY from .env\nHS excuse_apipy 4,U 6 from fastapi import FastAPI\n{} history,json uU 7 Frem pydantic import BaseModel Thought for 4 seconds >\nAF reaurementstxt 8 from openai impo rt OpenAI Below is a copy-and-paste playbook that turns a brand-new Google Colab notebook into a\n9 # --------\u2014\u2014 OpenAI client ---------- working, Gemini-powered excuse generator with a public endpoint you can hit from anywhere.\n10 client = OpenAI(api_key=os.getenv(\"OPENAI_API_KEY\") ) (Nothing to install on your laptop\u2014everything happens inside Colab.)\n11\nPROBLEMS @ OUTPUT DEBUG CONSOLE TERMINAL PORTS. + vrs AX\nn f >.) python3.11\nTIM return await get-async backend), run. sync_in_worker. thread oe ORS eniaie BCID net Coos\n\n@\n$03 > OUTLINE\n\n> TIMELINE\n\nWE & maine @0A4\n\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/anyio/_backends/_asyncio.py\", line 24\n70, in run_sync_in_worker_thread\nreturn await future\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/anyio/_backends/_asyncio.py\", line 96\n7, in run\nresult = context.run(func, xargs) 1.\nFile \"/Users/bhuvanarora/excuse-generator/excuse_api.py\", line 38, in generate\nres = client.chat.completions.create(\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/openai/_utils/_utils.py\", line 287, i\nn wrapper\nreturn func(*args, +kkwargs)\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/openai/resources/chat/completions/com\npletions.py\", line 1087, in create\nreturn self._post(\n\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/openai/_base_client.py\", line 1249, i\nn post\nreturn cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls) ) po\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARAAAA 1\nt\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/openai/_base_client.py\", line 1037, i\nn request\nraise self._make_status_error_from_response(err.response) from None\nopenai.RateLimitError: Error code: 429 - {'error': {'message': \u2018You exceeded your current quota, please check your p\nlan and billing details. For more information on this error, read the docs: https://platform. openai.com/docs/guides/\nerror-codes/api-errors.', \u2018type': \u2018insufficient_quota', \u2018param': None, \u2018code': \u2018insufficient_quota'}}\nQ  Ln10,Col53 Spaces:4 UTF-8 LF\n\n{} Python @& 3.13.264-bit\n\nFile > New > Notebook\nRename it Excuse\u2014Generator.ipynb.\n\n1 Set up the runtime (1 cell)\npython\n\n!pip -q install fastapi uvicorn go V e-generativeai pyngrok python-dotenv\n\n\u00a9) Copy\n\n\u20ac Work with Code Tab x\n\niam so sorry i maen i want to continue with vs code\n\n|\n+ @\u00ae ov\n\nS800eEGE80 \u00a98210 &*"
}
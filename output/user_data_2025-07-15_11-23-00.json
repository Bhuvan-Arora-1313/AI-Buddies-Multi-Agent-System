{
  "timestamp": "2025-07-15_11-23-00",
  "active_window": "WhatsApp",
  "focused_text": "i haev no",
  "clipboard": "https://youtu.be/5Xbhu-osvr8?si=D7TL4kaoiNs2BA_y",
  "vscode_text": "# excuse_api.py\nimport os, json, time, hashlib\nfrom pathlib import Path\nfrom dotenv import load_dotenv, find_dotenv\nload_dotenv(find_dotenv(), override=True)\n\n\n\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\n\n# --- Gemini via LangChain (REST v1) ---\nfrom langchain_google_genai import ChatGoogleGenerativeAI\nfrom langchain.schema import SystemMessage, HumanMessage\n\n# expose key for LangChain wrapper\nos.environ[\"GOOGLE_API_KEY\"] = os.getenv(\"GOOGLE_API_KEY\")  # must be in .env\n\nllm = ChatGoogleGenerativeAI(\n    model=\"gemini-2.5-flash\",          # free\u2011tier model\n    temperature=0.8,\n    convert_system_message_to_human=True\n)\n#print(\">>> model being used:\", model._name) \n# ---------- simple \u201cDB\u201d ----------\nDATA = Path(\"history.json\")\nif not DATA.exists():\n    DATA.write_text(\"[]\")          # seed empty list\n\n\n\n# ---------- FastAPI app ----------\napp = FastAPI()\n\nclass Req(BaseModel):\n    scenario: str  # e.g. \"missed class\"\n    urgency: str   # \"low\" | \"medium\" | \"panic\"\n    mode: str = \"normal\"   # \"normal\" | \"apology\"\n    language: str = \"en\"   # ISO code, e.g. \"en\", \"es\", \"fr\"\n    voice: bool = False   # If true, return an MP3 of the excuse\n\nclass EmergencyRequest(BaseModel):\n    number: str\n    message: str\n\nSYSTEM_PROMPT = \"\"\"\nYou are an elite alibi-creator.\nReturn a JSON with:\n  excuse               (\u2264 50 words),\n  believability_score  (0-1),\n  chat_log             (short WhatsApp-style proof)\n\"\"\"\n\n# ---------- /generate ----------\n@app.post(\"/generate\")\ndef generate(r: Req):\n    style_clause = (\n        \"Respond in a guilt\u2011tripping, heartfelt apology tone.\"\n        if r.mode.lower() == \"apology\"\n        else \"Respond in a neutral, believable tone.\"\n    )\n    # language directive\n    lang_clause = (\n        \"\" if r.language.lower() in [\"en\", \"english\"] else\n        f\"Respond in {r.language} language.\"\n    )\n    full_prompt = (\n        f\"{SYSTEM_PROMPT}\\n\"\n        f\"Tone: {style_clause}\\n\"\n        f\"{lang_clause}\\n\"\n        f\"Scenario: {r.scenario}\\nUrgency: {r.urgency}\"\n    )\n    messages = [\n        SystemMessage(content=SYSTEM_PROMPT),\n        HumanMessage(content=full_prompt)\n    ]\n    response_text = llm(messages).content.strip()\n    # LangChain may wrap JSON in ``` blocks \u2013 strip them\n    if response_text.startswith(\"```\"):\n        response_text = response_text.strip(\"`\").lstrip(\"json\").strip()\n    out = json.loads(response_text)\n    entry = {\n        \"id\": hashlib.md5(out[\"excuse\"].encode()).hexdigest(),\n        \"ts\": time.time(),\n        **out,\n    }\n    # --- optional voice synthesis ---\n    if r.voice:\n        from gtts import gTTS\n        audio_dir = Path(\"audio\")\n        audio_dir.mkdir(exist_ok=True)\n        audio_file = audio_dir / f\"{entry['id']}.mp3\"\n        gTTS(out[\"excuse\"], lang=r.language[:2]).save(audio_file.as_posix())\n        entry[\"audio\"] = str(audio_file)\n\n    history = json.loads(DATA.read_text())\n    if entry[\"id\"] not in {h[\"id\"] for h in history}:   # de-dupe\n        history.append(entry)\n        DATA.write_text(json.dumps(history, indent=2))\n\n    return entry\n\n# ---------- /top?n=5 ----------\n@app.get(\"/top\")\ndef top(n: int = 5):\n    history = json.loads(DATA.read_text())\n    history.sort(key=lambda x: x[\"believability_score\"], reverse=True)\n    return history[:n]\n\n# ---------- /emergency ----------\n@app.post(\"/emergency\")\ndef emergency(req: EmergencyRequest):\n    \"\"\"\n    Simulate sending an emergency SMS/call.\n    For the demo we just log the request and append an entry to history.json.\n    \"\"\"\n    entry = {\n        \"id\": f\"emergency-{int(time.time())}\",\n        \"ts\": time.time(),\n        \"excuse\": \"EMERGENCY TRIGGER\",\n        \"believability_score\": 1.0,\n        \"chat_log\": f\"Sent '{req.message}' to {req.number}\"\n    }\n    history = json.loads(DATA.read_text())\n    history.append(entry)\n    DATA.write_text(json.dumps(history, indent=2))\n    return {\"status\": \"sent\", \"to\": req.number, \"msg\": req.message}",
  "ocr_text": "@ = WhatsApp File Chat Edit Call View Window Help a 6& ODO8 \u00ae\u00bb ax~m F S \u00a9 Tue Jul15 11:23AM\n\nse Q\nmain v : Current File v | Fed | : 42 QA se\n\neee@ j ;\nBuddy Bubble Project 2 - Al buddies cloduddefence Al\ntele Chats \u00a9 S 2 Mm & Q lpy @ buddy_magic.py @ personal_assistant.py Vi: yay\n\nIsha, Jayant Kapoor Bits 2, Rupesh, ~Shreyak, You =\n\nroq.\n(sam) prod-Py XP Q Ask Meta Al or Search A2As\u00a5anv \u00a9\n\nssistant.py Yes 8:38PM Y\n@ swe_buddy.py TT\n8% \u2014 &q 2aCloude@e Yesterday Jayant Kapoor Bits 2 Engineering Graphics\nJ | y_groq.py Draft: lets have a meeting at 11 am all - e) Upload kardo on github HEY\no vy output \u00b0\nee  live_output.json fo) . . Tod\nHOUsAS) Project 2 - Al buddies clodudd... 11:22 AM oday\nsee {} prediction_output.json ~ Shreyak: can we have it rn? have anoth...\na = yrr gemini api credits knatam hogaye 7:45am YW\n8 .\n& Last login: Sat Jul 12 06:00:38 on Foe, Gurudwara A A AL 11:18 AM i made 2 new google accounts in that hardly i ran a few\n8 {[bhuvanarora@Bhuvans\u2014MacBook-Pro ~ Rajesh: az wt alat ai da wr arat Feat... xX 1) queries after which all credits were exausted ... aisa kaise\nApplications (Parallels) wv ~ ho sakta hai for new ID 7:46AM W\n\u00a39) | Buddy\na a) ect Dad\u00ae 10:57 AM koi free LLM nai aata kya 7:47AM W\nD t 5 -se-boliye- - - me\ng jocuments YW & pyar-se-boliye-dhan-guru-nanak: cao pena\n\nDownloads O\n\n{} | excuse-generator\nexcuse-generator-website\n\n{} Guru Gobind singh ji prakash parv\nLibrary\n\nmeeting kab karnin hai?? 9:\nJayant Kapoor Bits 2 Engineeri... 10:53AM ig 9:37AM W\n\nDaal do, mujhe dekhna hai 11am?\n\n1} Movies 9:37AM YW\n7 Pareld u Isha Gupta BITS 2023\n\u2018arallels . sha Gupta\n\n= .en|bhuvanarora@Bhuvans\u2014MacBook-Pro ~ PS-1 2025 CloudDefense.Al . 10:46 AM\n\n__ bhuvanarora@Bhuvans-MacBook-Pro bu ~ Sharan Gopal: Refer to the above link f... Bhond\n\u2014 11 am?\nag Simmi A 10:39 AM\n\nHaul : @ tras karlopiz A r0:0zam\n\npegect Ww 449940 plz AL\n@ buc\n\nOk 10:23AM W\n\nAmazon Yesterday id= \u2014\nAmazon Prime Day \u2014 8PM Deals! e 28...\n\n@ DUD. jogs ery\n@ floating_bubble_ui.py\n\n@ floating_bubble_ui_grog.py 1 unread message\n\n\u00aeS86@6\u00a2060539\n\nes eee toa\n\nce . Jayant Allen Bits Yesterday\n\nRun = floating_bubble_ui_groq \u00a9 activity WM Thanks bye ~Shreyak +91 96571 56993\n\ne can we have it rn? have another meet at 12:30 11:22AM\n@\u00a2\noF Gpt+ Yesterday .\nLg \"data_sources\": \"Active Window, Fox WM You: like for each new job opportunity -++ | ihaey no|\n\"timestamp\": 1752558689 .797154\nDeleted: output/user_data_2025-07-15_11-21-26.json\n\nDeleted: output/user_data_2025-07-15_11-21-10.json\nDeleted: output/user_data_2025-07-15_10-20-03.json\nDeleted: output/user_data_2025-07-15_10-18-27.json\nDeleted: output/user_data_2025-07-15_10-19-16.json\n\n= Deleted: outout/user data 2025-07-15 10-19-39.ison\nO Buddy > @ activity_analyzer_grog.py 151:41 LF UTF-8 4spaces Python 3.13 (Buddy) cf\n\nS80\u00b08SE20 BG090R00\"O'' a .=..\u00ae\n\nwc \u00a9"
}
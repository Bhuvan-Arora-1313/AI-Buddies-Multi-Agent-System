{
  "timestamp": "2025-07-02_10-10-47",
  "active_window": "ChatGPT",
  "focused_text": "Could not extract AXValue from focused element",
  "clipboard": "curl -X POST http://127.0.0.1:8000/generate \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\"scenario\":\"missed class\", \"urgency\":\"panic\"}'",
  "vscode_text": "# excuse_api.py\nimport os, json, time, hashlib\nfrom pathlib import Path\nfrom dotenv import load_dotenv\nload_dotenv()          # \u2190 NEW: pulls OPENAI_API_KEY from .env\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\nfrom openai import OpenAI\n# ---------- OpenAI client ----------\nclient = OpenAI(api_key=os.getenv(\"OPENAI_API_KEY\"))\n\n# ---------- simple \u201cDB\u201d ----------\nDATA = Path(\"history.json\")\nif not DATA.exists():\n    DATA.write_text(\"[]\")          # seed empty list\n\n\n\n# ---------- FastAPI app ----------\napp = FastAPI()\n\nclass Req(BaseModel):\n    scenario: str  # e.g. \"missed class\"\n    urgency: str   # \"low\" | \"medium\" | \"panic\"\n\nSYSTEM_PROMPT = \"\"\"\nYou are an elite alibi-creator.\nReturn a JSON with:\n  excuse               (\u2264 50 words),\n  believability_score  (0-1),\n  chat_log             (short WhatsApp-style proof)\n\"\"\"\n\n# ---------- /generate ----------\n@app.post(\"/generate\")\ndef generate(r: Req):\n    prompt = f\"Scenario: {r.scenario}\\nUrgency: {r.urgency}\"\n    res = client.chat.completions.create(\n        model=\"gpt-4o-mini\",\n        messages=[\n            {\"role\": \"system\", \"content\": SYSTEM_PROMPT},\n            {\"role\": \"user\",   \"content\": prompt},\n        ],\n        temperature=0.8,\n    )\n    out = json.loads(res.choices[0].message.content)\n\n    entry = {\n        \"id\": hashlib.md5(out[\"excuse\"].encode()).hexdigest(),\n        \"ts\": time.time(),\n        **out,\n    }\n\n    history = json.loads(DATA.read_text())\n    if entry[\"id\"] not in {h[\"id\"] for h in history}:   # de-dupe\n        history.append(entry)\n        DATA.write_text(json.dumps(history, indent=2))\n\n    return entry\n\n# ---------- /top?n=5 ----------\n@app.get(\"/top\")\ndef top(n: int = 5):\n    history = json.loads(DATA.read_text())\n    history.sort(key=lambda x: x[\"believability_score\"], reverse=True)\n    return history[:n]",
  "ocr_text": "Ow \u00ae 0\n\nChatGPT File Edit View\na\n\n\u00a2\u20ac > C4\nEXPLORER\n\n2\n\n> __pycache__\nv venv\n\n> bin\n\n> include\n\n> lib\n\n\u00a9 pyvenv.cfg\n\u00a9 .env\n\n@ excuse_api.py\n\n{} history.json\n\n=> BY & oO\n\n= requirements.txt\n\n@\n$03 > OUTLINE\n\n> TIMELINE\n\nWE & maine @0A4\n\n\\Y EXCUSE-GENERATOR\n\n4\n\nWindow\n\nU\nU\nU\nU\nU\n\nHelp\n\nx > x co x co x\n\nO 8 =\n\n=\n\nplatform.openai.com/settings/organization/api-keys\n\nP excuse-generator\n\nBOO\n\nx Welcome @ excuse_api.py 4,U X % .env U\n\n@ excuse_api.py > ...\n\n# excuse_api.py\n\nimport os, json, time, hashlib\n\nfrom pathlib import Path\n\nfrom dotenv import load_dotenv\n\nload_dotenv() # - NEW: pulls OPENAI_API_KEY from .env\n\nfrom fastapi import FastAPI\n\nfrom pydantic import BaseModel\n\nfrom openai import OpenAI\nOpenAI client\nOpenAI (api_key=os.getenv(\"OPENAI_API_KEY\") )\n\n10 client =\n\nPROBLEMS @ OUTPUT DEBUG CONSOLE PORTS.\n\n+ Vue A xX\n\n-) python3.11\n>-| zsh\n\nTERMINAL\n\nsync\nreturn await get_async_backend().run_sync_in_worker_thread(\n\naf\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/anyio/_backends/_asyncio.py\", line 24\n70, in run_sync_in_worker_thread\nreturn await future\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/anyio/_backends/_asyncio.py\", line 96\n7, in run\nresult = context.run(func, xargs) 1.\nFile \"/Users/bhuvanarora/excuse-generator/excuse_api.py\", line 38, in generate\nres = client.chat.completions.create(\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/openai/_utils/_utils.py\", line 287, i\nn wrapper\nreturn func(*args, +kkwargs)\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/openai/resources/chat/completions/com\npletions.py\", line 1087, in create\nreturn self._post(\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/openai/_base_client.py\", line 1249, i\nn post\nreturn cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls) )\n\nt\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/openai/_base_client.py\", line 1037, i\nn request\nraise self._make_status_error_from_response(err.response) from None\nopenai.RateLimitError: Error code: 429 - {'error': {'message': \u2018You exceeded your current quota, please check your p\nlan and billing details. For more information on this error, read the docs: https://platform. openai.com/docs/guides/\nerror-codes/api-errors.', \u2018type': \u2018insufficient_quota', \u2018param': None, \u2018code': \u2018insufficient_quota'}}\n\nQ  n10,Col53 Spaces:4 UTF-8 LF {} Python & 3.13.264-bit ()\n\nby a O\n\n6 \u20ac8 \u00a90GD O S 2) FF Q SB \u00a9 WedJul2 10:10AM\nx x | x S x G apikeys - Openal Al X\n\neee OG Intelligent Excuse Generator Plan >\n\nBhuvan Co\nGood news > the key is now being read correctly\nThe traceback has changed from \u201cincorrect API key\u201d to:\n\u00a9) Copy\nOpenai.RateLimitError: Error code: 429 \u2014 'You exceeded your current quota\n\nplease check your plan and billing details' 'type': 'insufficient_quota\n\nThat means the request reached OpenAl but your key has no remaining credit (or no billing\nset up). The fix is not in the code anymore\u2014it's on the OpenAl dashboard.\n\nHow to unblock yourself in < 5 min\n\nOption What to do Cost/N\n1. Add a payment method (most reliable) 1. Go to https://platform.openai.com/ Pay-as-'\naccount/usage ~> you'll see $8.00 GPT-3.5\nremaining.2. Click Billing > Payment methods\n> \"Add payment method\u201d and add a card.3.\nSwitch to Billing > Overview > click \u201cAdd\ncredit\u201d and preload e.g. $5.Credits appear\ninstantly; retry the curl.\n2. Use a fresh key with free credits If you have another OpenAl account that still Only wo\nhas the initial free trial credits, create a key (many re\n\nthere and paste it into . env.\n\n3. Swap to a free / OSS model Rep v 2 the OpenAl call with another provider Requires\n\n\u20ac Work with Code Tab x\n\nMessage Bhuvan\n\n+ @\u00ae\n\nen\n\nWw\n\n\u00a9\n\n\u00ae\n\nS800eEGE80 \u00a98210 &*"
}
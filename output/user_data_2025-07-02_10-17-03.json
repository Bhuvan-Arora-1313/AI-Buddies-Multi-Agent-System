{
  "timestamp": "2025-07-02_10-17-03",
  "active_window": "firefox",
  "focused_text": "2",
  "clipboard": "GEMINI_KEY=AI-XXXXXXXXXXXXXXXXXXXXXXXX",
  "vscode_text": "GEMINI_KEY=AI-XXXXXXXXXXXXXXXXXXXXXXXX",
  "ocr_text": "@ Firefox File Edit View History Bookmarks Tools Window Help \u00a9 \u20ac&8 \u00a9 DB O 8S we se Q S&S @ Wed Jul2 10:17AM\n\n(ica) =) List of research p X * Artificial Intelliger X NLP_1.ipynb - Co! X NLP_1.ipynb - Co! X @) LAUNCHED Globe X Launched - Artific X Artificial_Intelligence_ X @) AI-O5-BBLEN4 X \u00a9 Openal x @ APi keys - OpenA X [G) Using Gemini AP! X + Vv\n\nCO O 8 = aigoogle.dey, B\u00ae w 9 %4O\n\nGoogle Al for Developers Models Solutions \u00bb | Codeassistance \u00bb Showcase \u00bb Community v Q_ Search -e- @ English v eB )\n\nGemini API docs API Reference Cookbook Community\n\nresponse = client.models.generate_content (\n\nGet started On this page\nmodel=\"gemini-2.5-flash\", contents=\"Explain how AI works in a few words\" pag\n\n) Setting API key as environment variable\nOverview a _\n\nprint(response. text) Providing API key explicitly\nQuickstart\n\nKeep your API key secure\nAPI keys a: .\nCritical security rules\n\nLibraries\n\nBest practices\nOpenAl compatibility\nKeep your API key secure\n\nModels\nTreat your Gemini API key like a password. If compromised, others can use your project's quota, incur charges (if billing is enabled), and access\nAll models your private data, such as files.\nPricing\nRate limits\nBilling info Critical security rules\n\na e Never commit API keys to source control. Do not check your API key into version control systems like Git.\nModel Capabilities\n\ne Never expose API keys on the client-side. Do not use your API key directly in web or mobile apps in production. Keys in client-side code\n\nText generation (including our JavaScript/TypeScript libraries and REST calls) can be extracted.\n\nImage generation\nVideo generation\nSpeech generation A Best practices\n\nMusic generation A . . . . . .\ne Use server-side calls with API keys The most secure way to use your API key is to call the Gemini API from a server-side application\n\nLong context |\nwhere the key can be kept confidential.\n\nStructured output\nThinking e Use ephemeral tokens for client-side access (Live API only): For direct client-side access to the Live API, you can use ephemeral tokens.\nFunction calling They come with lower security risks and can be suitable for production use. Review ephemeral tokens guide for more information.\n\nDocument understanding\n\u00a2 Consider adding restrictions to your key: You can limit a key's permissions by adding API key restrictions. This minimizes the potential\n\nImage understanding . ;\ndamage if the key is ever leaked.\n\nVideo understanding\nAudio understanding For some general best practices, you can also review this support article.\nCode execution\n\nURL context A\n< Was this helpful?\n\n@ aac\n\nSHBOseaSsSl\u00aeo OG2010 \u00a3\u00a3"
}
{
  "timestamp": "2025-07-02_10-09-56",
  "active_window": "ChatGPT",
  "focused_text": "Could not extract AXValue from focused element",
  "clipboard": "curl -X POST http://127.0.0.1:8000/generate \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\"scenario\":\"missed class\", \"urgency\":\"panic\"}'",
  "vscode_text": "# excuse_api.py\nimport os, json, time, hashlib\nfrom pathlib import Path\nfrom dotenv import load_dotenv\nload_dotenv()          # \u2190 NEW: pulls OPENAI_API_KEY from .env\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\nfrom openai import OpenAI\n# ---------- OpenAI client ----------\nclient = OpenAI(api_key=os.getenv(\"OPENAI_API_KEY\"))\n\n# ---------- simple \u201cDB\u201d ----------\nDATA = Path(\"history.json\")\nif not DATA.exists():\n    DATA.write_text(\"[]\")          # seed empty list\n\n\n\n# ---------- FastAPI app ----------\napp = FastAPI()\n\nclass Req(BaseModel):\n    scenario: str  # e.g. \"missed class\"\n    urgency: str   # \"low\" | \"medium\" | \"panic\"\n\nSYSTEM_PROMPT = \"\"\"\nYou are an elite alibi-creator.\nReturn a JSON with:\n  excuse               (\u2264 50 words),\n  believability_score  (0-1),\n  chat_log             (short WhatsApp-style proof)\n\"\"\"\n\n# ---------- /generate ----------\n@app.post(\"/generate\")\ndef generate(r: Req):\n    prompt = f\"Scenario: {r.scenario}\\nUrgency: {r.urgency}\"\n    res = client.chat.completions.create(\n        model=\"gpt-4o-mini\",\n        messages=[\n            {\"role\": \"system\", \"content\": SYSTEM_PROMPT},\n            {\"role\": \"user\",   \"content\": prompt},\n        ],\n        temperature=0.8,\n    )\n    out = json.loads(res.choices[0].message.content)\n\n    entry = {\n        \"id\": hashlib.md5(out[\"excuse\"].encode()).hexdigest(),\n        \"ts\": time.time(),\n        **out,\n    }\n\n    history = json.loads(DATA.read_text())\n    if entry[\"id\"] not in {h[\"id\"] for h in history}:   # de-dupe\n        history.append(entry)\n        DATA.write_text(json.dumps(history, indent=2))\n\n    return entry\n\n# ---------- /top?n=5 ----------\n@app.get(\"/top\")\ndef top(n: int = 5):\n    history = json.loads(DATA.read_text())\n    history.sort(key=lambda x: x[\"believability_score\"], reverse=True)\n    return history[:n]",
  "ocr_text": "ChatGPT File Edit View Window\u2019 Help 3 2%8) FF Q S& Wed Jul 2 10:09AM\n+\n\n= List of research pape X * Artificial Intelligence X CO NLP_1.ipynb - Colab X CO NLP_1.ipynb - Colab X ca LAUNCHED Global X \u2122@ Launched - Artificial X Artificial_Intelligence_Ce X (B\u00ae al-05-BBLEN4 x \u00a9 Opendl x So API keys - OpenAl A! X\nP A nnn q 5 Bp \u2014\nmac > C @\u00ae \u00a9 @ <2 platform.openai.com/settings/organization/api-keys eee OG Intelligent Excuse Generator Plan > ie y=\n\u2014\u2014\u2014\u2014_ \u2014\u2014__________\u2014\u2014 Bhuvan\n6 c <> P excuse-generator By BOWL\nEXPLORER oe J Welcome \u00ae excuse_api.py 4,U X % .env U Dy &% oe\n2 |e\nVv EXCUSE-GENERATOR @ excuse_api.py > ...\nSs 7 a\n> __pycache__ is\nic p Oven 1 # excuse_api.py 2 let mem tell u that the order u told me was already there\n> ain 2 import os, json, time, hashlib = before so i am again agetting the same erro internal\ncE > include 3 from pathlib import Path\n5 p p se3rver error\n> a 4 from dotenv import load_dotenv\n\u00a9 pyvenv.cfg U wer\n& env t 5  load_dotenv() # < NEW: pulls OPENAT_API_KEY from .env\n, BS eer 6 from fastapi import FastAPI\n{} history.j U ha .\nve imstem ison 7 from pydantic import BaseModel\nA = requirements.txt U SERA\n8 from openal impo rt OpenAI Okay, the error code 429 is showing now, indicating \u201cYou exceeded your current quota.\u201d This update confirms the issue is\n9 # Oe OpenAL client \u2014--------- not with the API key, but with the usage quota being exhausted or the lack of billing setup. To fix this, | could suggest\n7 7 h hn adding a card for billing or using a different API key with credits. Alternatively, if the user hasn't added a card yet, they\n10 client = OpenAI (api_key=os.getenv( OPENAT_API_KEY )) might be able to continue, but with limited access.\n11\nPROBLEMS @ OUTPUT DEBUGCONSOLE TERMINAL PORTS tye A Xx\nsync P >.) python3.11\nreturn await get_async_backend().run_sync_in_worker_thread( >] zsh\nAAA AAAAARAAAAAAAAAAAAAAAAAAAAAAAAARARAAAAAAARARAAAAA .1\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/anyio/_backends/_asyncio.py\", line 24\n70, in run_sync_in_worker_thread\nreturn await future\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/anyio/_backends/_asyncio.py\", line 96\n7, in run\nresult = context.run(func, xargs) 1.\nP File \"/Users/bhuvanarora/excuse-generator/excuse_api.py\", line 38, in generate\nres = client.chat.completions.create(\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/openai/_utils/_utils.py\", line 287, i\nn wrapper\nreturn func(*args, +kkwargs) b\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/openai/resources/chat/completions/com\npletions.py\", line 1087, in create\nreturn self._post(\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/openai/_base_client.py\", line 1249, i\nn post\nreturn cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls) ) 1\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARAAAA 1\nFile \"/Users/bhuvanarora/excuse-generator/.venv/lib/python3.11/site-packages/openai/_base_client.py\", line 1037, i\u2019 |\nn request\n(2) raise self._make_status_error_from_response(err.response) from None\nopenai.RateLimitError: Error code: 429 - {'error': {'message': \u2018You exceeded your current quota, please check your p\n> OUTLINE lan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/\n$03 Sacine error-codes/api-errors.', \u2018type': \u2018insufficient_quota', \u2018param': None, \u2018code': \u2018insufficient_quota'}} \u20ac% Work with Code Tab x\n| % main* \u00ae@ @oA4 Q_ 1n10,Col53 Spaces:4 UTF-8 LF {} Python @& 3.13.264-bit\n\nMessage Bhuvan\n\n+ @\u00ae ov ts)\nG8e\u00b000 &\u00ae\n\n880068820"
}